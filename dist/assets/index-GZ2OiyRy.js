import{createClient as De}from"https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))t(a);new MutationObserver(a=>{for(const i of a)if(i.type==="childList")for(const s of i.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&t(s)}).observe(document,{childList:!0,subtree:!0});function o(a){const i={};return a.integrity&&(i.integrity=a.integrity),a.referrerPolicy&&(i.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?i.credentials="include":a.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(a){if(a.ep)return;a.ep=!0;const i=o(a);fetch(a.href,i)}})();const Ge="https://uebjprtwmkqugjmcugdt.supabase.co",Ue="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlYmpwcnR3bWtxdWdqbWN1Z2R0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI4NDM2NzYsImV4cCI6MjA2ODQxOTY3Nn0.M0fz-1-Z32EtHnBDTtaqaMekUVdUjD49K9YoCgKCQ48";function Oe(){try{const e=De(Ge,Ue);return console.log("[DEBUG] Supabase client initialized."),e}catch(e){throw console.error("[ERROR] Error initializing Supabase client:",e),e}}const Te=document.getElementById("playerNameInput"),Pe=document.getElementById("setPlayerNameBtn"),ge=document.getElementById("player-name-section"),ue=document.getElementById("room-selection-card"),he=document.getElementById("my-room-view"),F=document.getElementById("createRoomTabBtn"),K=document.getElementById("joinRoomTabBtn"),ee=document.getElementById("create-room-tab"),ne=document.getElementById("join-room-tab"),Ne=document.getElementById("newRoomNameInput"),We=document.getElementById("createRoomBtn"),A=document.getElementById("roomIdInput"),Me=document.getElementById("joinRoomBtn"),Ae=document.getElementById("leaveRoomBtn");document.getElementById("room-info");const je=document.getElementById("currentRoomId"),J=document.getElementById("playerList"),x=document.getElementById("messageBox"),He=document.getElementById("sharedCounterDisplay"),ze=document.getElementById("sharedRandomDisplay"),Ve=document.getElementById("incrementCounterBtn"),qe=document.getElementById("generateRandomBtn"),Fe=document.getElementById("roomBackground");document.getElementById("roleList");const Ke=document.getElementById("viewAllRolesBtn"),Be=document.getElementById("rolesOverlay"),Je=document.getElementById("rolesOverlayCloseBtn"),fe=document.getElementById("rolesGridContainerOverlay"),Ie=document.getElementById("detailedRoleOverlay"),Ye=document.getElementById("detailedOverlayCloseBtn"),pe=document.getElementById("detailedOverlayImage"),Ze=document.getElementById("detailedOverlayRoleName"),Xe=document.getElementById("detailedOverlayThaiName"),Qe=document.getElementById("detailedOverlayDescription"),Y=document.getElementById("detailedOverlayGemsContainer"),R=document.getElementById("dynamicMainTitle"),ce=document.getElementById("roomNameDisplay"),$=document.getElementById("renameRoomTitleBtn"),_e=document.getElementById("renameRoomModal"),oe=document.getElementById("renameRoomInput"),en=document.getElementById("confirmRenameBtn"),nn=document.getElementById("cancelRenameBtn"),b=document.getElementById("rolePoolTab"),te=document.getElementById("rolePoolTabKnob");document.getElementById("rolePoolTabCloseBtn");const Z=document.getElementById("centerRolePoolDisplay"),S=document.getElementById("playerRolePileContainer"),ae=document.getElementById("myRoleTriggerArea"),on=document.getElementById("gem-counter-section"),U=document.getElementById("gemSettingsList"),O=document.getElementById("addGemButton"),ie=document.getElementById("startGameBtn"),Le=document.getElementById("addGemModal"),X=document.getElementById("availableGemsList");document.getElementById("cancelAddGemBtn");const ye=["https://i.imgur.com/hvBtKgM.jpeg","https://i.imgur.com/QIxZror.jpeg","https://i.imgur.com/4wQ8gYe.jpeg"],G="/images/gems/",j={Townfolks:{color:"#2ecc71",image:`${G}townfolks.jpg`},Werewolfs:{color:"#e74c3c",image:`${G}werewolves.jpg`},Specials:{color:"#f39c12",image:`${G}specials.jpg`},Vampires:{color:"#9b59b6",image:`${G}vampires.jpg`},Zombies:{color:"#55B4B4",image:`${G}zombies.jpg`},None:{color:"#95a5a6",image:`${G}none.jpg`}},tn="/images/roles/",P=[{name:"Nobody","thai-name":"ไม่มีบทบาท",description:"Cannot be capable to do things","variant-count":5,gem:"None","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Narrator","thai-name":"ผู้บรรยาย",description:"Moderate the game","variant-count":1,gem:"None","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Villager","thai-name":"ชาวบ้าน",description:"Has no special night ability. Wins by accurately identifying and lynching Werewolves.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Seer","thai-name":"ผู้พยากรณ์",description:"Each night, chooses a player to learn their alignment which is Townfolks/Werewolfs.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"See through",action:"-select-any -show-rough-gem -o -night"}],conditions:void 0},{name:"Aura Seer","thai-name":"ผู้หยั่งรู้",description:"Each night, chooses a player to learn their role type which is Wolves/Townfolks/Specials.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"See through",action:"-select-any -show-gem -o -night"}],conditions:void 0},{name:"Apprentice Seer","thai-name":"ผู้พยากรณ์ฝึกหัด",description:"Apprentice Seer may be less powerful or gain power if the primary Seer dies.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-none-role-seer -none-role-restricted_seer -none-role-aura_seer",result:"-gain-role-seer"}]},{name:"Restricted Seer","thai-name":"ผู้พยากรณ์ต้องพันธนาการ",description:"Two times per game, at night, chooses a player to learn their alignment which is Townfolks/Werewolfs.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"See through",action:"-select-any -show-rough-gem -o -c2 -night"}],conditions:void 0},{name:"Prophet","thai-name":"ผู้เผยพระวจนะ",description:"Each night, chooses a player to learn their alignment which is Townfolks/Werewolfs. Have 1 time ability to reveal the role of a player.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"See through",action:"select-any -show-rough-gem -o -night"},{name:"Enlightened",action:"select-any -show-role -o -night -c1"}],conditions:void 0},{name:"Doctor","thai-name":"แพทย์",description:"One time per each game, chooses one player to revive from death.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Medication Effectiveness",action:"-select-status-dead -revive -c1 -o -night -before-gem-werewolfs"}],conditions:void 0},{name:"Nurse","thai-name":"นางพยาบาล",description:"The Nurse specifically gains the Doctor's ability if the Doctor dies.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-none-doctor",result:"-gain-role-doctor"}]},{name:"Bodyguard","thai-name":"บอดี้การ์ด",description:"Each night, chooses one player to protect; if that player is attacked, the Bodyguard may die in their place.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Full Protection",action:"-select-any -send-condition-being_protected<name: -this-name> -c1 -o -night -before-gem-werewolfs"}],conditions:[{condition:"-receive-kill",result:"-cancel -select-name-<name> -send-kill -c1"}]},{name:"Mason","thai-name":"ช่างก่ออิฐ",description:"Knows all other Masons, confirming their good alignment to each other.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Hunter","thai-name":"นายพราน",description:"If eliminated (lynched or killed by Werewolves), immediately chooses another player to eliminate.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Avenged",action:"-unusable -select-any -send-kill -c1"}],conditions:[{condition:"-receive-kill",result:"-trigger-ability-avenged"}]},{name:"Troublemaker","thai-name":"ตัวป่วน",description:"One time per game, at night, swaps the roles of two other players.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Troublemaker",action:"select-any-a2 -swap-role -o -c1 -night -late"}],conditions:void 0},{name:"Robber","thai-name":"โจร",description:"One time per game, at night, swaps their own role card with another player's role card and then views their new role.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Robbing",action:"-select-any -o -this -c1 -night -swap-role"}],conditions:void 0},{name:"Drunk","thai-name":"ขี้เมา",description:"Swaps a role card with a card from the center. The Drunk swaps their own without looking.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-night-d1",result:"-center -swap-role"}]},{name:"Bartender","thai-name":"บาร์เทนเดอร์",description:"One time per game, the Bartender swaps a central card with another player's.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Shaking",action:"-select-any -o -select-center-a1 -swap-role"}],conditions:void 0},{name:"Cupid","thai-name":"คิวปิด",description:'On the first night, chooses two players to be "lovers." If one lover dies, the other immediately dies as well.',"variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Love Knot",action:"-night-d1 -c1 -select-any-a2 -send-condition-love_knot<lover_name: -another-name>"}],conditions:[{name:"Love Knot",condition:"-receive-kill",result:"-select-name-lover_name -send-kill"}]},{name:"Witch","thai-name":"แม่มด",description:"Possesses two single-use potions: one to save a player from death, and one to kill any player.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Healing Potion",action:"-select-status-dead -c1 -night -late -o -send-revive"},{name:"Harming Potion",action:"-select-any -c1 -night -o -send-kill"}],conditions:void 0},{name:"Jailer","thai-name":"พัศดี",description:'Each night, chooses a player to "jail," preventing them from using their night ability and protecting them from nighttime attacks.',"variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Jails",action:"-select-any -night -o -send-condition-jailed<name>"}],conditions:[{name:"Jailed",condition:"-recieve-kill -night",result:"-cancel -c1 -t1"}]},{name:"Prince","thai-name":"เจ้าชาย",description:"If nominated for lynching, can reveal their role to automatically survive that lynching.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-receive-lynched",result:"-select-all -declare-role -cancel -c1 -o"}]},{name:"Mayor","thai-name":"นายกเทศบาล",description:"Their vote counts as two during the day.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-day",result:"-increased-vote_count-1"}],isPrimarilyDisabled:!0},{name:"Ghost","thai-name":"ผี",description:"Dies on the first night, then can communicate limited clues (e.g., one letter per night) from beyond the grave.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Clue",action:"-unusable -this -write-max-1 -show-all -c1"}],conditions:[{condition:"-night-d1 -c1",result:"-this -send-kill"},{condition:"-night-d2",result:"-this -trigger-ability-clue"}]},{name:"Lycanthrope","thai-name":"ไลแคน",description:"Appears as a Werewolf to the Seer but is actually a loyal Village team member.","variant-count":1,gem:"Townfolks","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Magician","thai-name":"นักมายากล",description:"Has one-time abilities to kill or revive a player at night.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Healing",action:"-night -c1 -select-status-dead -send-revive -this-remove-ability-harming -o"},{name:"Harming",action:"-night -c1 -select-any -send-kill -this-remove-ability-healing -o"}],conditions:void 0},{name:"Spellcaster","thai-name":"ผู้ร่ายมนต์",description:"At night, chooses a player who cannot speak during the following day phase.","variant-count":4,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Speakless",action:"-night -late -select-any -send-unspokable-l1 -o"}],conditions:void 0},{name:"Bodybuilder","thai-name":"นักกล้าม",description:"Survives one additional night attack from Werewolves.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-receive-kill -by-gem-werewolfs",result:"-cancel -c1"}]},{name:"Martyr","thai-name":"ผู้เห็นเหตุการณ์/มรณสักขี",description:"If someone is nominated for lynching, they can choose to die in their place to save the nominated player.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Die For You",action:"-select-<event> -cancel -o -this-send-kill"}],conditions:[{condition:"-event-lynched",result:"-this -trigger-ability-die_for_you<event: -event>"}],isPrimarilyDisabled:!0},{name:"Beholder","thai-name":"ผู้สังเกตการณ์",description:"Wakes up at night with seers to learn who the Seers are.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-event-wake-seer",result:"-this -send-wake -select-role-seer -select-role-restricted_seer -select-role-prophet -select-role-apprentice_seer -select-role-aure_seer -show-role-this"}]},{name:"Defender","thai-name":"ผู้ปกป้อง",description:"Can protect a player from Werewolf attacks, but typically cannot protect the same person two nights in a row.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Sheriff","thai-name":"นายอำเภอ",description:"During daytime, can force a vote on a player. The Sheriff can choose a Deputy.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Deputy","thai-name":"ปลัดอำเภอ",description:"The Deputy gains the Sheriff's abilities if the Sheriff dies.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-none-sheriff",result:"-gain-role-sheriff"}]},{name:"Apothecary","thai-name":"เภสัชกร",description:"Is informed of who will be killed each night and has one potion to save and one potion to intensify the kill.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Cursed","thai-name":"ผู้ต้องสาป",description:"If targeted by a Werewolf for killing, they transform into a Werewolf instead of dying.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolfs",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Diseased","thai-name":"ผู้ติดเชื้อ",description:"If a Werewolf kills the Diseased player, the Werewolves cannot kill on the following night.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Spirit Medium","thai-name":"ผู้สื่อวิญญาณ",description:"Dead players can write notes to the Spirit Medium, providing clues to the living players.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Undertaker","thai-name":"สัปเหร่อ",description:"One time per game, the undertaker can dig a grave to see the role of a dead player.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Old Hag","thai-name":"มนุษย์ยายแก่",description:"At night, chooses a player who must leave the village the next day.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Old Man","thai-name":"ผู้สูงอายุ",description:"Will die within 3 days.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Necromancer","thai-name":"ผู้คืนชีพคนตาย",description:"Two times per game, copy an ability from a player, cannot copy from a player two times in row.","variant-count":1,gem:"Townfolks","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Dodger","thai-name":"ผู้หลบหลีก",description:"One time per game, can send the effect received toward a player at night.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Sponge","thai-name":"ฟองน้ำ",description:"During voting, if the Sponge receives the most points, the person with the next highest vote count is lynched.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Spellbinder","thai-name":"ผู้ลงมนต์",description:"Wakes up first and touches one player; that player does not wake up or use their ability during that night.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Vigilante","thai-name":"ศาลเตี้ย",description:"Have one time ability to kill a player during the night, if killed a townfolk, the vigilante will die afterward from guilt","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Werewolf","thai-name":"มนุษย์หมาป่า",description:"Each night, collectively choose one player to eliminate.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0,"default-amount":2},{name:"Alpha Werewolf","thai-name":"มนุษย์หมาป่าอัลฟ่า",description:"Each night, collectively choose one player to eliminate. Can turn a player who's not being a werewolf, to be one","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Dire Wolf","thai-name":"หมาป่าโลกันตร์",description:"Each night, along with the wolves, choose a player to eliminate. During the first night, choose a player to be your companion. You are eliminated if the player is eliminated.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Guardian Wolf","thai-name":"หมาป่าผู้พิทักษ์",description:"One time per game, a guardian wolf can choose a fellow werewolf to be protected from dying.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Minion","thai-name":"ลูกสมุน",description:"Wins with the Werewolves. Knows who the Werewolves are, but the Werewolves do not know the Minion.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Mystic Wolf","thai-name":"หมาป่าลึกลับ",description:"A Werewolf with a limited 2 times investigative ability, can tell the role of a non-werewolf characters.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Wolf Cub","thai-name":"ลูกหมาป่า",description:"A Werewolf with a limited 2 times investigative ability, can tell the role of a non-werewolf characters. The wolf cub cannot do killing votes, but in 3 days or all the wolves are killed, will become a werewolf","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Nightmare Werewolf","thai-name":"หมาป่าแห่งฝันร้าย",description:'Can impose a "nightmare" on a player, affecting their abilities to be affected on a random player instead',"variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Dream Wolf","thai-name":"หมาป่าผู้หลับฝัน",description:"A Werewolf who does not know the other Werewolves, but the other Werewolves know them.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Squire","thai-name":"คหบดีชนบท",description:"Know who the Werewolves are, win if the werewolves win.","variant-count":1,gem:"Townfolks","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Voodoo Lady","thai-name":"หญิงสาวผู้ถือตุ๊กตาต้องสาป",description:"The Voodoo Lady curses a player; if that player nominates anyone for lynching, the cursed player dies.","variant-count":1,gem:"Townfolks","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Tanner","thai-name":"ผู้สิ้นหวัง",description:"Wins only if they are lynched by the villagers.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Tanner","thai-name":"ผู้สิ้นหวัง",description:"Wins only if they are lynched by the villagers.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Doppelgänger","thai-name":"ตัวแทน",description:"On the first night, chooses another player. If that player dies, the Doppelgänger takes on their role and abilities.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"The Fool","thai-name":"คนบ้า",description:"Wins only if they can manipulating the other villagers to be lynched to death.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Bookie","thai-name":"เจ้ามือแทงพนัน",description:"At night, guess who will be lynched on the next day, Wins by correctly betting on who will be lynched.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Sleuth","thai-name":"นักสืบ",description:"Can reveal themselves to guess roles; if successful, they win alone.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Pacifist","thai-name":"ผู้รักสันติ",description:"Can make another player's vote count as two, or prevent their own vote from counting.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Nostradamus","thai-name":"นอสตราดามุส",description:"One time per game, wakes up and can look at a set number of cards; the last card they look at determines their winning team.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Reaper","thai-name":"ยมทูต",description:"A standalone killer who wins if they are one of the last two players alive.","variant-count":1,gem:"Specials","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Cult Leader","thai-name":"ผู้นำลัทธิ",description:"Each night, can add a player to their cult. Wins if all remaining players are part of their cult.","variant-count":1,gem:"Specials","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Vampire","thai-name":"แวมไพร์",description:"Belonging to a separate Vampire faction, during the night, can collectively vote a player to be cut and being converted within 1 days. Wins only if all the players are vampires","variant-count":1,gem:"Vampires","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Zombie","thai-name":"ซอมบี้",description:"Collectively vote a player to turn them into a new zombie. Wins only if all the players are zombies","variant-count":1,gem:"Zombies","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Infected","thai-name":"ผู้ติดเชื้อ",description:"Starting as a villager, when died will transform into a zombie.","variant-count":1,gem:"Zombies","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0}];let V=new Map;function r(e,n="info"){x.textContent=e,x.className="message-box",n==="success"?x.classList.add("bg-green-600","text-white"):n==="error"?x.classList.add("error"):x.classList.add("info"),x.classList.remove("hidden"),setTimeout(()=>{x.classList.add("hidden")},5e3)}function an(){return Math.floor(1e5+Math.random()*9e5).toString()}function rn(){return typeof crypto<"u"&&crypto.randomUUID?crypto.randomUUID():"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var n=Math.random()*16|0,o=e=="x"?n:n&3|8;return o.toString(16)})}function re(e){if(!P){console.error("[ERROR] ROLE_TEMPLATES is undefined in helpers.js when trying to get role template for:",e);return}return P.find(n=>n.name===e)}function sn(e){return e.toLowerCase().replace(/\s/g,"")}function C(e){const n=sn(e);return`${tn}${n}.jpg`}async function H(e){if(V.has(e))return V.get(e);try{const n=await fetch(e);if(!n.ok)throw console.warn(`[WARNING] Failed to fetch image from ${e}. Status: ${n.status}`),new Error(`HTTP error! status: ${n.status}`);const o=await n.blob();return new Promise((t,a)=>{const i=new FileReader;i.onloadend=()=>{const s=i.result;V.set(e,s),t(s)},i.onerror=s=>{console.error(`[ERROR] FileReader error for ${e}:`,s),a(new Error(`FileReader error: ${s.message}`))},i.readAsDataURL(o)})}catch(n){console.error(`[ERROR] Error fetching or converting image ${e}:`,n);const o="https://placehold.co/180x180/ff0000/ffffff?text=Image+Error";return V.set(e,o),o}}function Q(e){for(let n=e.length-1;n>0;n--){const o=Math.floor(Math.random()*(n+1));[e[n],e[o]]=[e[o],e[n]]}}let xe=null;async function ln(e,n){console.log(`[DEBUG] Fetching room data for ID: ${n}`);try{const{data:o,error:t}=await e.from("Rooms").select("*").eq("id",n).single();if(t&&t.code==="PGRST116")return console.log(`[DEBUG] Room ${n} not found.`),null;if(t)throw t;return console.log("[DEBUG] Room data fetched:",o),o}catch(o){return console.error("[ERROR] Error fetching room data:",o),r(`Error fetching room: ${o.message}`,"error"),null}}async function cn(e,n,o,t){console.log(`[DEBUG] Creating room "${n}" with host ${t} (localId: ${o})...`);const a=an(),s={player_id:generateShortId(),player_name:t,local_id:o,roles:[]},l=ye[Math.floor(Math.random()*ye.length)],d={};P.forEach(k=>{d[k.name]=C(k.name)});const{data:m,error:g}=await e.from("Rooms").insert([{id:a,name:n,host_id:o,players:[s],background_url:l,game_data:{shared_counter:0,shared_random_value:null,role_settings:[],center_role_pool:[],role_image_map:d}}]).select().single();if(g)throw console.error("[ERROR] Error creating room:",g),r(`Error creating room: ${g.message}`,"error"),g;return console.log("[DEBUG] Room created:",m),m}async function dn(e,n,o,t){console.log(`[DEBUG] Attempting to join room ${n} as ${t} (localId: ${o})...`);const{data:a,error:i}=await e.from("Rooms").select("players").eq("id",n).single();if(i)throw console.error("[ERROR] Error fetching room for join check:",i),r(`Error joining room: ${i.message}`,"error"),i;const s=a.players.find(m=>m.local_id===o);if(s)return r(`You are already in room ${n} as ${s.player_name}.`,"info"),console.log(`[DEBUG] Player with localId ${o} already in room. Returning existing player data.`),s;const d={player_id:generateShortId(),player_name:t,local_id:o,roles:[]};try{const{data:m,error:g}=await e.rpc("add_player_to_room",{p_room_id:n,p_player_id:d.player_id,p_player_name:d.player_name,p_local_id:d.local_id});if(g)throw g;return console.log("[DEBUG] Player added to room:",d),d}catch(m){throw console.error("[ERROR] Error adding player to room:",m),r(`Error joining room: ${m.message}`,"error"),m}}async function mn(e,n,o,t){console.log(`[DEBUG] Player ${o} (localId: ${t}) attempting to leave room ${n}...`);try{const{data:a,error:i}=await e.rpc("remove_player_from_room",{p_room_id:n,p_player_id:o});if(i)throw i;console.log("[DEBUG] Player removed from room:",a)}catch(a){throw console.error("[ERROR] Error leaving room:",a),r(`Error leaving room: ${a.message}`,"error"),a}}async function we(e,n,o){console.log(`[DEBUG] Kicking player ${o} from room ${n}...`);try{const{data:t,error:a}=await e.rpc("remove_player_from_room",{p_room_id:n,p_player_id:o});if(a)throw a;r(`Player ${o} kicked.`,"info"),console.log("[DEBUG] Player kicked:",t)}catch(t){console.error("[ERROR] Error kicking player:",t),r(`Error kicking player: ${t.message}`,"error")}}async function gn(e,n,o){console.log(`[DEBUG] Renaming room ${n} to "${o}"...`);try{const{data:t,error:a}=await e.from("Rooms").update({name:o}).eq("id",n);if(a)throw a;console.log("[DEBUG] Room renamed successfully.")}catch(t){throw console.error("[ERROR] Error renaming room:",t),r(`Error renaming room: ${t.message}`,"error"),t}}async function un(e,n,o){return gn(e,n,o)}async function hn(e,n,o){console.log(`[DEBUG] Incrementing counter for room ${n}...`);try{const t=o+1,{data:a,error:i}=await e.from("Rooms").update({game_data:{...xe.game_data,shared_counter:t}}).eq("id",n);if(i)throw i;console.log("[DEBUG] Counter incremented to:",t)}catch(t){console.error("[ERROR] Error incrementing counter:",t),r(`Error updating counter: ${t.message}`,"error")}}async function fn(e,n){console.log(`[DEBUG] Generating random value for room ${n}...`);try{const o=Math.floor(Math.random()*100)+1,{data:t,error:a}=await e.from("Rooms").update({game_data:{...xe.game_data,shared_random_value:o}}).eq("id",n);if(a)throw a;console.log("[DEBUG] Random value generated:",o)}catch(o){console.error("[ERROR] Error generating random value:",o),r(`Error generating random value: ${o.message}`,"error")}}async function ve(e,n){console.log(`[DEBUG] [updateRoleAmount] Attempting to change amount for role: ${e} by ${n}`);{r("Room data not loaded or Supabase not initialized.","error");return}}async function be(e){console.log(`[DEBUG] [toggleRoleDisabled] Toggling disabled status for role: ${e}`);{r("Room data not loaded or Supabase not initialized.","error");return}}async function Ee(e){console.log(`[DEBUG] [removeGemFromSettings] Removing role setting for: ${e}`);{r("Room data not loaded or Supabase not initialized.","error");return}}async function pn(e,n,o){return console.log(`[DEBUG] [addGemToSettings] Adding role setting for: ${o}`),r("Room data not loaded or Supabase not initialized.","error"),!1}async function yn(e,n,o){if(console.log("[DEBUG] Attempting to start game..."),!o||!o.players||o.players.length===0){r("No players in the room to start the game.","error");return}if(!o.game_data||!o.game_data.role_settings||o.game_data.role_settings.length===0){r("No roles configured. Please add roles in settings.","error");return}const t=[...o.players];let a=[];if(o.game_data.role_settings.forEach(l=>{if(!l.isDisabled){const d=re(l.role);if(d)for(let m=0;m<l.amount;m++){const g=JSON.parse(JSON.stringify(d));g["chosen-image-url"]=o.game_data.role_image_map[d.name]||C(d.name),a.push(g)}}}),a.length<t.length){r(`Not enough roles configured! Need ${t.length} roles, but only have ${a.length}. Adjust gem counts.`,"error");return}a.length>t.length&&(Q(a),a=a.slice(0,t.length)),Q(a),Q(t);const i=t.map((l,d)=>{const m=a[d];return m?{...l,roles:[m]}:l}),s=[];try{const{data:l,error:d}=await e.from("Rooms").update({players:i,game_data:{...o.game_data,center_role_pool:s}}).eq("id",n);if(d)throw d;r("Game started! Roles assigned.","success"),console.log("[DEBUG] Game started, roles assigned and center pool cleared.")}catch(l){console.error("[ERROR] Error starting game:",l),r(`Error starting game: ${l.message}`,"error")}}function wn(e,n){Be.classList.add("active"),n(e),console.log("[DEBUG] Showing roles overlay.")}function vn(){Be.classList.remove("active"),console.log("[DEBUG] Hiding roles overlay.")}async function de(e,n){var a;console.log("[DEBUG] Showing detailed role overlay for:",e),Ie.classList.add("active"),Ze.textContent=e.name,Xe.textContent=e["thai-name"]||"",Qe.textContent=e.description;const o=((a=n.game_data)==null?void 0:a.role_image_map)||{},t=e["chosen-image-url"]||o[e.name]||C(e.name);if(pe.src=await H(t),pe.alt=e.name,Y.innerHTML="",e.gem){const i=j[e.gem];if(i){const s=document.createElement("div");s.className="flex items-center space-x-2 text-sm",s.innerHTML=`
                <span class="px-2 py-1 rounded-full text-white" style="background-color: ${i.color};">${e.gem}</span>
            `,Y.appendChild(s)}}if(e["rough-gem"]){const i=j[e["rough-gem"]];if(i){const s=document.createElement("div");s.className="flex items-center space-x-2 text-sm",s.innerHTML=`
                <span class="px-2 py-1 rounded-full text-white" style="background-color: ${i.color};">Rough: ${e["rough-gem"]}</span>
            `,Y.appendChild(s)}}}function bn(){Ie.classList.remove("active"),console.log("[DEBUG] Hiding detailed role overlay.")}function En(e,n,o){X.innerHTML="",e.length===0?X.innerHTML='<p class="text-center text-gray-500">No more gem categories to add.</p>':e.forEach(t=>{const a=n[t];if(!a)return;const i=document.createElement("div");i.className="available-gem-item",i.dataset.gemName=t,i.innerHTML=`
                <img src="${a.image}" alt="${t}" class="available-gem-item-image">
                <span class="available-gem-item-name">${t}</span>
            `,i.addEventListener("click",async()=>{await o(t)&&$e()}),X.appendChild(i)}),Le.classList.add("active"),console.log("[DEBUG] Showing add gem modal.")}function $e(){Le.classList.remove("active"),console.log("[DEBUG] Hiding add gem modal.")}function Rn(){_e.classList.add("active"),console.log("[DEBUG] [showRenameRoomModal] Rename modal shown.")}function Se(){_e.classList.remove("active"),oe.value="",console.log("[DEBUG] [hideRenameRoomModal] Rename modal hidden.")}function kn(){oe.value=ce.textContent,oe.focus()}let se=!1;function Re(e,n,o,t,a,i,s,l,d){var k,p,T,z,D;console.log("[DEBUG] [updateRoomUI] Updating UI with room data:",e);const m=e.background_url||"https://i.imgur.com/hvBtKgM.jpeg";Fe.style.backgroundImage=`url('${m}')`,je.textContent=e.id,ce.textContent=e.name;const g=e.host_id===n;console.log(`[DEBUG] [updateRoomUI] Current user ID: ${n}, Host ID: ${e.host_id}, Is Host: ${g}`),J.innerHTML="",e.players&&Array.isArray(e.players)&&(e.players.forEach(v=>{const f=document.createElement("div");f.className="player-item flex justify-between items-center bg-gray-100 p-2 rounded-md shadow-sm mb-2",f.innerHTML=`
                <span class="font-semibold">${v.player_name} (${v.player_id})</span>
                ${g&&v.player_id!==o?`<button class="kick-player-btn bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md text-sm" data-player-id="${v.player_id}">Kick</button>`:""}
            `,J.appendChild(f)}),g&&J.querySelectorAll(".kick-player-btn").forEach(v=>{v.addEventListener("click",f=>{const L=f.target.dataset.playerId;console.log(`[DEBUG] Kicking player: ${L}`),t(e.id,L)})})),He.textContent=((k=e.game_data)==null?void 0:k.shared_counter)||0,ze.textContent=((p=e.game_data)==null?void 0:p.shared_random_value)||"N/A",e.game_data&&e.game_data.role_settings?_n(e.game_data.role_settings,g,s,l,d):(U.innerHTML='<p class="text-center text-gray-500">No role settings configured.</p>',O.classList.add("hidden")),i(a,((T=e.game_data)==null?void 0:T.role_image_map)||{}),Tn(((z=e.game_data)==null?void 0:z.center_role_pool)||[],((D=e.game_data)==null?void 0:D.role_image_map)||{}),g?ie.classList.remove("hidden"):ie.classList.add("hidden")}async function Tn(e,n){if(console.log("[DEBUG] [renderCenterRolePool] Rendering center role pool:",e),Z.innerHTML="",e.length===0){Z.innerHTML='<p class="text-center text-gray-500 w-full">No roles in the center pool.</p>';return}for(const o of e){const t=document.createElement("div");t.className="role-card-small bg-white p-2 rounded-lg shadow-md text-center cursor-pointer transform transition-transform duration-200 hover:scale-105",t.dataset.roleName=o.name;const a=o["chosen-image-url"]||n[o.name]||C(o.name),i=await H(a);t.innerHTML=`
            <img src="${i}" alt="${o.name}" class="w-16 h-16 mx-auto mb-2 rounded-full object-cover border-2 border-gray-300">
            <h4 class="text-sm font-semibold text-gray-800">${o.name}</h4>
        `,t.addEventListener("click",()=>de(o,{game_data:{role_image_map:n}})),Z.appendChild(t)}}async function Bn(e){var o;console.log("[DEBUG] [renderAllRoleCardsToOverlay] Rendering all role cards to overlay."),fe.innerHTML="";const n=((o=e.game_data)==null?void 0:o.role_image_map)||{};for(const t of P){const a=document.createElement("div");a.className="role-card bg-white p-4 rounded-lg shadow-md text-center cursor-pointer transform transition-transform duration-200 hover:scale-105",a.dataset.roleName=t.name;const i=n[t.name]||C(t.name),s=await H(i);a.innerHTML=`
            <img src="${s}" alt="${t.name}" class="w-24 h-24 mx-auto mb-4 rounded-full object-cover border-4 border-gray-300">
            <h3 class="text-lg font-bold text-gray-900">${t.name}</h3>
            <p class="text-sm text-gray-600">${t["thai-name"]||""}</p>
        `,a.addEventListener("click",()=>de(t,e)),fe.appendChild(a)}}async function ke(e,n){if(console.log("[DEBUG] [renderPlayerRoleCards] Rendering player role cards:",e),S.innerHTML="",!e||e.length===0){S.innerHTML='<p class="text-center text-gray-500">No roles assigned yet.</p>';return}for(let o=0;o<e.length;o++){const t=e[o],a=document.createElement("div");a.className="player-role-card absolute bg-white p-4 rounded-lg shadow-lg text-center cursor-pointer transition-all duration-300 ease-in-out transform",a.dataset.roleName=t.name;const i=t["chosen-image-url"]||n[t.name]||C(t.name),s=await H(i);a.innerHTML=`
            <img src="${s}" alt="${t.name}" class="w-24 h-24 mx-auto mb-4 rounded-full object-cover border-4 border-gray-300">
            <h3 class="text-lg font-bold text-gray-900">${t.name}</h3>
            <p class="text-sm text-gray-600">${t["thai-name"]||""}</p>
        `,a.addEventListener("click",()=>de(t,{game_data:{role_image_map:n}})),S.appendChild(a)}me()}function In(){se=!se,me()}function me(){const e=Array.from(S.children),n=e.length;if(n!==0)if(se){S.offsetWidth;const o=e[0].offsetWidth,t=20;e.forEach((a,i)=>{const s=(i-(n-1)/2)*(o+t);a.style.left=`calc(50% + ${s}px - ${o/2}px)`,a.style.transform="translateY(-50%) rotate(0deg)",a.style.zIndex=n-i})}else e.forEach((o,t)=>{const a=t*5;o.style.left=`calc(50% + ${a}px)`,o.style.transform=`translateY(-50%) rotate(${t*2}deg)`,o.style.zIndex=t})}async function _n(e,n,o,t,a){if(console.log("[DEBUG] [renderGemSettings] Rendering gem settings:",e),console.log("[DEBUG] [renderGemSettings] ROLE_TEMPLATES (in render.js scope):",P),console.log("[DEBUG] [renderGemSettings] getRoleTemplate (function reference):",re),U.innerHTML="",!e||e.length===0)U.innerHTML='<p class="text-center text-gray-500">No role categories added yet.</p>';else{e.sort((i,s)=>i.gem.localeCompare(s.gem));for(const i of e){const s=i.gem,l=i.role,d=i.amount,m=i.isDisabled,g=j[s],k=re(l);if(!g||!k){console.warn(`[WARNING] Missing gem data for ${s} or role template for ${l}. Skipping.`);continue}const p=document.createElement("div");p.className=`gem-setting-item flex items-center p-2 rounded-lg shadow-sm mb-2 relative ${m?"bg-gray-300 opacity-60":"bg-white"}`,p.style.borderColor=g.color,p.style.borderWidth="2px",p.style.borderStyle="solid";const T=document.createElement("img"),z=k["chosen-image-url"]||C(l);T.src=await H(z),T.alt=l,T.className="w-10 h-10 rounded-full object-cover mr-3 border-2",T.style.borderColor=g.color,p.appendChild(T);const D=document.createElement("div");D.className="flex-grow",D.innerHTML=`
                <h4 class="font-semibold text-gray-800">${l}</h4>
                <p class="text-xs text-gray-600">${s}</p>
            `,p.appendChild(D);const v=document.createElement("div");v.className="flex items-center space-x-2 ml-4";const f=document.createElement("button");f.className="gem-setting-button bg-red-500 hover:bg-red-600 text-white w-6 h-6 rounded-full flex items-center justify-center text-lg font-bold",f.textContent="-",f.dataset.gemName=s,f.dataset.roleName=l,f.dataset.action="decrementGem",f.style.pointerEvents="auto",f.addEventListener("click",()=>{console.log(`[DEBUG] Minus button clicked for role: ${l}`),o(l,-1)}),v.appendChild(f);const L=document.createElement("span");L.className="text-lg font-bold text-gray-900 min-w-[20px] text-center",L.textContent=d,L.style.pointerEvents="none",v.appendChild(L);const B=document.createElement("button");if(B.className="gem-setting-button bg-green-500 hover:bg-green-600 text-white w-6 h-6 rounded-full flex items-center justify-center text-lg font-bold",B.textContent="+",B.dataset.gemName=s,B.dataset.roleName=l,B.dataset.action="incrementGem",B.style.pointerEvents="auto",B.addEventListener("click",()=>{console.log(`[DEBUG] Plus button clicked for role: ${l}`),o(l,1)}),v.appendChild(B),p.appendChild(v),n){const W=document.createElement("button");W.className=`ml-2 px-2 py-1 rounded-md text-sm ${m?"bg-blue-500 hover:bg-blue-600 text-white":"bg-yellow-500 hover:bg-yellow-600 text-white"}`,W.textContent=m?"Enable":"Disable",W.style.pointerEvents="auto",W.addEventListener("click",()=>t(l)),p.appendChild(W);const M=document.createElement("button");M.className="ml-2 px-2 py-1 bg-red-500 hover:bg-red-600 text-white rounded-md text-sm",M.textContent="Remove",M.style.pointerEvents="auto",M.addEventListener("click",()=>a(l)),p.appendChild(M)}U.appendChild(p)}}n?O.classList.remove("hidden"):O.classList.add("hidden"),U.contains(O)||U.appendChild(O),console.log("[DEBUG] [renderGemSettings] Finished gem settings rendering.")}function _(e){console.log(`[DEBUG] [showView] Called with: ${e}`),ge.classList.add("hidden"),ue.classList.add("hidden"),he.classList.add("hidden"),F.classList.remove("active"),K.classList.remove("active"),ee.classList.add("hidden"),ne.classList.add("hidden"),A.value="",b.classList.remove("active"),te.classList.add("hidden"),S.innerHTML="",S.classList.remove("active"),ae.classList.add("hidden"),on.classList.add("hidden"),ie.classList.add("hidden"),e==="player-name"?(R.classList.add("hidden"),ge.classList.remove("hidden"),$.classList.add("hidden")):e==="room-selection"?(R.classList.remove("hidden"),ce.textContent="WolfVille Village",R.classList.remove("room-title-sign"),R.contains($)&&R.removeChild($),$.classList.add("hidden"),ue.classList.remove("hidden"),N("create-room")):e==="my-room"?(R.classList.remove("hidden"),R.classList.add("room-title-sign"),R.contains($)||R.appendChild($),he.classList.remove("hidden"),te.classList.remove("hidden"),ae.classList.remove("hidden")):console.warn(`[DEBUG] [showView] Unknown view requested: ${e}`),console.log(`[DEBUG] [showView] Displaying: ${e}`)}function N(e){console.log(`[DEBUG] [showTab] Called with: ${e}`),F.classList.remove("active"),K.classList.remove("active"),ee.classList.add("hidden"),ne.classList.add("hidden"),A.value="",e==="create-room"?(F.classList.add("active"),ee.classList.remove("hidden"),console.log("[DEBUG] [showTab] Create Room Tab content shown.")):e==="join-room"?(K.classList.add("active"),ne.classList.remove("hidden"),console.log("[DEBUG] [showTab] Join Room Tab content shown.")):console.warn(`[DEBUG] [showTab] Unknown tab requested: ${e}`)}let h,c=null,w=null,y=null,I=null,E="",u=null;async function Ln(){console.log("[DEBUG] Initializing app..."),h=Oe(),y=localStorage.getItem("localId"),y||(y=rn(),localStorage.setItem("localId",y)),console.log(`[DEBUG] Local ID: ${y}`),E=localStorage.getItem("playerName"),E?(Te.value=E,_("room-selection"),N("create-room")):_("player-name");const e=new URLSearchParams(window.location.search),n=localStorage.getItem("currentRoomId"),o=e.get("room");o?(A.value=o,await le()):n&&(A.value=n,await le()),Pn(),console.log("[DEBUG] App initialized.")}async function xn(){const e=Te.value.trim();e?(E=e,localStorage.setItem("playerName",E),r(`Player name set to: ${E}`,"success"),_("room-selection"),N("create-room")):r("Please enter a player name.","error")}async function $n(){const e=Ne.value.trim();if(!e){r("Please enter a room name.","error");return}if(!E){r("Please set your player name first.","error"),_("player-name");return}try{const n=await cn(h,e,y,E);n&&(c=n.id,w=n.players[0].player_id,localStorage.setItem("currentRoomId",c),localStorage.setItem("userId",w),history.pushState(null,"",`?room=${c}`),Ce(c),r(`Room "${e}" created!`,"success"),_("my-room"))}catch(n){console.error("[ERROR] Error creating room:",n),r(`Error creating room: ${n.message}`,"error")}}async function le(){const e=A.value.trim();if(!e){r("Please enter a room ID.","error");return}if(!E){r("Please set your player name first.","error"),_("player-name");return}try{const n=await dn(h,e,y,E);n&&(c=e,w=n.player_id,localStorage.setItem("currentRoomId",c),localStorage.setItem("userId",w),history.pushState(null,"",`?room=${c}`),Ce(c),r(`Joined room "${e}"!`,"success"),_("my-room"))}catch(n){console.error("[ERROR] Error joining room:",n),r(`Error joining room: ${n.message}`,"error")}}async function q(){if(!c||!w){r("Not in a room to leave.","info");return}try{await mn(h,c,w,y),I&&(await I.unsubscribe(),h.removeChannel(I),I=null,console.log(`[DEBUG] Unsubscribed from room ${c}`)),localStorage.removeItem("currentRoomId"),localStorage.removeItem("userId"),c=null,w=null,u=null,history.pushState(null,"",window.location.pathname),r("Left the room.","info"),_("room-selection"),N("create-room")}catch(e){console.error("[ERROR] Error leaving room:",e),r(`Error leaving room: ${e.message}`,"error")}}async function Sn(){var e;c&&u?await hn(h,c,((e=u.game_data)==null?void 0:e.shared_counter)||0):r("Please join a room first.","error")}async function Cn(){c&&u?await fn(h,c):r("Please join a room first.","error")}async function Dn(){c&&u&&u.host_id===y?(Rn(),kn()):r("Only the host can rename the room.","error")}async function Gn(){const e=document.getElementById("renameRoomInput").value.trim();if(e&&c)try{await un(h,c,e),Se(),r("Room renamed successfully!","success")}catch(n){console.error("[ERROR] Error confirming room rename:",n),r(`Error renaming room: ${n.message}`,"error")}else r("Please enter a valid new room name.","error")}async function Un(){var e;if(c&&u&&u.host_id===y){const n=new Set(((e=u.game_data)==null?void 0:e.role_settings.map(t=>t.gem))||[]),o=Object.keys(j).filter(t=>!n.has(t));En(o,j,async t=>{try{const a=P.find(s=>s.gem===t);return a?await pn(h,c,a.name)?(r(`Added ${t} category with ${a.name}.`,"success"),!0):!1:(r(`No default role found for gem category: ${t}`,"error"),!1)}catch(a){return console.error("[ERROR] Error adding gem to settings:",a),r(`Error adding gem: ${a.message}`,"error"),!1}})}else r("Only the host can add role categories.","error")}async function On(){c&&u&&u.host_id===y?await yn(h,c,u):r("Only the host can start the game.","error")}async function Ce(e){I&&(await I.unsubscribe(),h.removeChannel(I),console.log(`[DEBUG] Unsubscribed from previous channel: ${e}`)),I=h.channel(`room:${e}`).on("postgres_changes",{event:"*",schema:"public",table:"Rooms",filter:`id=eq.${e}`},n=>{if(console.log("[DEBUG] Change received!",n),n.eventType==="UPDATE"||n.eventType==="INSERT"){u=n.new;const o=u.players.find(a=>a.player_id===w),t=o?o.roles:[];Re(u,y,w,(a,i)=>we(h,a,i),t,ke,ve,be,Ee)}else n.eventType==="DELETE"&&(r("The room was deleted by the host.","info"),q())}).subscribe(),console.log(`[DEBUG] Subscribed to room ${e}`);try{const n=await ln(h,e);if(n){u=n;const o=u.players.find(a=>a.player_id===w),t=o?o.roles:[];Re(u,y,w,(a,i)=>we(h,a,i),t,ke,ve,be,Ee)}else r("Room not found or inaccessible.","error"),q()}catch(n){console.error("[ERROR] Error fetching initial room data:",n),r(`Error fetching room data: ${n.message}`,"error"),q()}}function Pn(){Pe.addEventListener("click",xn),We.addEventListener("click",$n),Me.addEventListener("click",le),Ae.addEventListener("click",q),Ve.addEventListener("click",Sn),qe.addEventListener("click",Cn),$.addEventListener("click",Dn),en.addEventListener("click",Gn),nn.addEventListener("click",Se),Ke.addEventListener("click",()=>wn(u,Bn)),Je.addEventListener("click",vn),Ye.addEventListener("click",bn),O.addEventListener("click",Un),cancelAddGemBtn.addEventListener("click",$e),startGameBtn.addEventListener("click",On),F.addEventListener("click",()=>N("create-room")),K.addEventListener("click",()=>N("join-room"));let e=!1,n,o;te.addEventListener("mousedown",t=>{e=!0,n=t.clientX,o=b.getBoundingClientRect().left,b.style.transition="none",document.body.style.userSelect="none"}),document.addEventListener("mousemove",t=>{if(!e)return;const a=t.clientX-n,i=Math.min(0,o+a);b.style.transform=`translateX(${i}px)`}),document.addEventListener("mouseup",()=>{if(!e)return;e=!1,b.style.transition="transform 0.5s ease-in-out";const t=b.getBoundingClientRect().left,a=-b.offsetWidth/2;t>a?(b.classList.add("active"),b.style.transform="translateX(0)"):(b.classList.remove("active"),b.style.transform="translateX(-100%)"),document.body.style.userSelect=""}),ae.addEventListener("click",In),window.addEventListener("resize",me),window.addEventListener("beforeunload",async t=>{if(console.log("[DEBUG] [beforeunload] Page is about to unload. Attempting to leave room..."),c&&w&&h)try{h.rpc("remove_player_from_room",{p_room_id:c,p_player_id:w}).then(()=>{console.log("[DEBUG] [beforeunload] Sent leave room request successfully.")}).catch(a=>{console.error("[ERROR] [beforeunload] Error sending leave room request:",a)})}catch(a){console.error("[ERROR] [beforeunload] Error preparing leave room request:",a)}})}window.onload=Ln;console.log("Script fully loaded and executed.");

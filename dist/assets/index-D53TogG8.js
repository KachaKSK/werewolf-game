import{createClient as Ve}from"https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))o(a);new MutationObserver(a=>{for(const i of a)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&o(r)}).observe(document,{childList:!0,subtree:!0});function t(a){const i={};return a.integrity&&(i.integrity=a.integrity),a.referrerPolicy&&(i.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?i.credentials="include":a.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(a){if(a.ep)return;a.ep=!0;const i=t(a);fetch(a.href,i)}})();const Fe="https://uebjprtwmkqugjmcugdt.supabase.co",Je="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlYmpwcnR3bWtxdWdqbWN1Z2R0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI4NDM2NzYsImV4cCI6MjA2ODQxOTY3Nn0.M0fz-1-Z32EtHnBDTtaqaMekUVdUjD49K9YoCgKCQ48";function Ke(){try{const e=Ve(Fe,Je);return console.log("[DEBUG] Supabase client initialized."),e}catch(e){throw console.error("[ERROR] Error initializing Supabase client:",e),e}}const ke=document.getElementById("playerNameInput"),Te=document.getElementById("setPlayerNameBtn"),Be=document.getElementById("player-name-section"),Ne=document.getElementById("room-selection-card"),Ie=document.getElementById("my-room-view"),Y=document.getElementById("createRoomTabBtn"),Z=document.getElementById("joinRoomTabBtn"),ue=document.getElementById("create-room-tab"),he=document.getElementById("join-room-tab"),Xe=document.getElementById("newRoomNameInput"),qe=document.getElementById("createRoomBtn"),z=document.getElementById("roomIdInput"),Ye=document.getElementById("joinRoomBtn"),Se=document.getElementById("leaveRoomBtn"),Ze=document.getElementById("room-info"),ie=document.getElementById("currentRoomId"),M=document.getElementById("playerList");document.getElementById("messageBox");const se=document.getElementById("sharedCounterDisplay"),re=document.getElementById("sharedRandomDisplay"),Qe=document.getElementById("incrementCounterBtn"),en=document.getElementById("generateRandomBtn"),le=document.getElementById("roomBackground"),pe=document.getElementById("roleList"),nn=document.getElementById("viewAllRolesBtn"),$e=document.getElementById("rolesOverlay"),tn=document.getElementById("rolesOverlayCloseBtn"),Le=document.getElementById("rolesGridContainerOverlay"),Oe=document.getElementById("detailedRoleOverlay"),on=document.getElementById("detailedOverlayCloseBtn"),De=document.getElementById("detailedOverlayImage"),an=document.getElementById("detailedOverlayRoleName"),sn=document.getElementById("detailedOverlayThaiName"),rn=document.getElementById("detailedOverlayDescription"),ce=document.getElementById("detailedOverlayGemsContainer"),T=document.getElementById("dynamicMainTitle"),j=document.getElementById("roomNameDisplay"),B=document.getElementById("renameRoomTitleBtn"),ln=document.getElementById("renameRoomModal"),fe=document.getElementById("renameRoomInput"),cn=document.getElementById("confirmRenameBtn"),dn=document.getElementById("cancelRenameBtn"),p=document.getElementById("rolePoolTab"),V=document.getElementById("rolePoolTabKnob"),mn=document.getElementById("rolePoolTabCloseBtn"),de=document.getElementById("centerRolePoolDisplay"),D=document.getElementById("playerRolePileContainer"),F=document.getElementById("myRoleTriggerArea"),ye=document.getElementById("gem-counter-section"),S=document.getElementById("gemSettingsList"),H=document.getElementById("addGemButton"),X=document.getElementById("startGameBtn"),Q=document.getElementById("addGemModal"),me=document.getElementById("availableGemsList");document.getElementById("cancelAddGemBtn");const _e=["https://i.imgur.com/hvBtKgM.jpeg","https://i.imgur.com/QIxZror.jpeg","https://i.imgur.com/4wQ8gYe.jpeg"],U="/images/gems/",I={Townfolks:{color:"#2ecc71",image:`${U}townfolks.jpg`},Werewolfs:{color:"#e74c3c",image:`${U}werewolves.jpg`},Specials:{color:"#f39c12",image:`${U}specials.jpg`},Vampires:{color:"#9b59b6",image:`${U}vampires.jpg`},Zombies:{color:"#55B4B4",image:`${U}zombies.jpg`},None:{color:"#95a5a6",image:`${U}none.jpg`}},gn="/images/roles/",K=[{name:"Nobody","thai-name":"ไม่มีบทบาท",description:"Cannot be capable to do things","variant-count":5,gem:"None","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Narrator","thai-name":"ผู้บรรยาย",description:"Moderate the game","variant-count":1,gem:"None","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Villager","thai-name":"ชาวบ้าน",description:"Has no special night ability. Wins by accurately identifying and lynching Werewolves.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Seer","thai-name":"ผู้พยากรณ์",description:"Each night, chooses a player to learn their alignment which is Townfolks/Werewolfs.","variant-count":4,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"See through",action:"-select-any -show-rough-gem -o -night"}],conditions:void 0},{name:"Aura Seer","thai-name":"ผู้หยั่งรู้",description:"Each night, chooses a player to learn their role type which is Wolves/Townfolks/Specials.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"See through",action:"-select-any -show-gem -o -night"}],conditions:void 0},{name:"Apprentice Seer","thai-name":"ผู้พยากรณ์ฝึกหัด",description:"Apprentice Seer may be less powerful or gain power if the primary Seer dies.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-none-role-seer -none-role-restricted_seer -none-role-aura_seer",result:"-gain-role-seer"}]},{name:"Restricted Seer","thai-name":"ผู้พยากรณ์ต้องพันธนาการ",description:"Two times per game, at night, chooses a player to learn their alignment which is Townfolks/Werewolfs.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"See through",action:"-select-any -show-rough-gem -o -c2 -night"}],conditions:void 0},{name:"Prophet","thai-name":"ผู้เผยพระวจนะ",description:"Each night, chooses a player to learn their alignment which is Townfolks/Werewolfs. Have 1 time ability to reveal the role of a player.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"See through",action:"select-any -show-rough-gem -o -night"},{name:"Enlightened",action:"select-any -show-role -o -night -c1"}],conditions:void 0},{name:"Doctor","thai-name":"แพทย์",description:"One time per each game, chooses one player to revive from death.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Medication Effectiveness",action:"-select-status-dead -revive -c1 -o -night -before-gem-werewolfs"}],conditions:void 0},{name:"Nurse","thai-name":"นางพยาบาล",description:"The Nurse specifically gains the Doctor's ability if the Doctor dies.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-none-doctor",result:"-gain-role-doctor"}]},{name:"Bodyguard","thai-name":"บอดี้การ์ด",description:"Each night, chooses one player to protect; if that player is attacked, the Bodyguard may die in their place.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Full Protection",action:"-select-any -send-condition-being_protected<name: -this-name> -c1 -o -night -before-gem-werewolfs"}],conditions:[{condition:"-receive-kill",result:"-cancel -select-name-<name> -send-kill -c1"}]},{name:"Mason","thai-name":"ช่างก่ออิฐ",description:"Knows all other Masons, confirming their good alignment to each other.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Hunter","thai-name":"นายพราน",description:"If eliminated (lynched or killed by Werewolves), immediately chooses another player to eliminate.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Avenged",action:"-unusable -select-any -send-kill -c1"}],conditions:[{condition:"-receive-kill",result:"-trigger-ability-avenged"}]},{name:"Troublemaker","thai-name":"ตัวป่วน",description:"One time per game, at night, swaps the roles of two other players.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Troublemaker",action:"select-any-a2 -swap-role -o -c1 -night -late"}],conditions:void 0},{name:"Robber","thai-name":"โจร",description:"One time per game, at night, swaps their own role card with another player's role card and then views their new role.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Robbing",action:"-select-any -o -this -c1 -night -swap-role"}],conditions:void 0},{name:"Drunk","thai-name":"ขี้เมา",description:"Swaps a role card with a card from the center. The Drunk swaps their own without looking.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-night-d1",result:"-center -swap-role"}]},{name:"Bartender","thai-name":"บาร์เทนเดอร์",description:"One time per game, the Bartender swaps a central card with another player's.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Shaking",action:"-select-any -o -select-center-a1 -swap-role"}],conditions:void 0},{name:"Cupid","thai-name":"คิวปิด",description:'On the first night, chooses two players to be "lovers." If one lover dies, the other immediately dies as well.',"variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Love Knot",action:"-night-d1 -c1 -select-any-a2 -send-condition-love_knot<lover_name: -another-name>"}],conditions:[{name:"Love Knot",condition:"-receive-kill",result:"-select-name-lover_name -send-kill"}]},{name:"Witch","thai-name":"แม่มด",description:"Possesses two single-use potions: one to save a player from death, and one to kill any player.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Healing Potion",action:"-select-status-dead -c1 -night -late -o -send-revive"},{name:"Harming Potion",action:"-select-any -c1 -night -o -send-kill"}],conditions:void 0},{name:"Jailer","thai-name":"พัศดี",description:'Each night, chooses a player to "jail," preventing them from using their night ability and protecting them from nighttime attacks.',"variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Jails",action:"-select-any -night -o -send-condition-jailed<name>"}],conditions:[{name:"Jailed",condition:"-recieve-kill -night",result:"-cancel -c1 -t1"}]},{name:"Prince","thai-name":"เจ้าชาย",description:"If nominated for lynching, can reveal their role to automatically survive that lynching.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-receive-lynched",result:"-select-all -declare-role -cancel -c1 -o"}]},{name:"Mayor","thai-name":"นายกเทศบาล",description:"Their vote counts as two during the day.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-day",result:"-increased-vote_count-1"}],isPrimarilyDisabled:!0},{name:"Ghost","thai-name":"ผี",description:"Dies on the first night, then can communicate limited clues (e.g., one letter per night) from beyond the grave.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Clue",action:"-unusable -this -write-max-1 -show-all -c1"}],conditions:[{condition:"-night-d1 -c1",result:"-this -send-kill"},{condition:"-night-d2",result:"-this -trigger-ability-clue"}]},{name:"Lycanthrope","thai-name":"ไลแคน",description:"Appears as a Werewolf to the Seer but is actually a loyal Village team member.","variant-count":1,gem:"Townfolks","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Magician","thai-name":"นักมายากล",description:"Has one-time abilities to kill or revive a player at night.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Healing",action:"-night -c1 -select-status-dead -send-revive -this-remove-ability-harming -o"},{name:"Harming",action:"-night -c1 -select-any -send-kill -this-remove-ability-healing -o"}],conditions:void 0},{name:"Spellcaster","thai-name":"ผู้ร่ายมนต์",description:"At night, chooses a player who cannot speak during the following day phase.","variant-count":4,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Speakless",action:"-night -late -select-any -send-unspokable-l1 -o"}],conditions:void 0},{name:"Bodybuilder","thai-name":"นักกล้าม",description:"Survives one additional night attack from Werewolves.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-receive-kill -by-gem-werewolfs",result:"-cancel -c1"}]},{name:"Martyr","thai-name":"ผู้เห็นเหตุการณ์/มรณสักขี",description:"If someone is nominated for lynching, they can choose to die in their place to save the nominated player.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Die For You",action:"-select-<event> -cancel -o -this-send-kill"}],conditions:[{condition:"-event-lynched",result:"-this -trigger-ability-die_for_you<event: -event>"}],isPrimarilyDisabled:!0},{name:"Beholder","thai-name":"ผู้สังเกตการณ์",description:"Wakes up at night with seers to learn who the Seers are.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-event-wake-seer",result:"-this -send-wake -select-role-seer -select-role-restricted_seer -select-role-prophet -select-role-apprentice_seer -select-role-aure_seer -show-role-this"}]},{name:"Defender","thai-name":"ผู้ปกป้อง",description:"Can protect a player from Werewolf attacks, but typically cannot protect the same person two nights in a row.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Sheriff","thai-name":"นายอำเภอ",description:"During daytime, can force a vote on a player. The Sheriff can choose a Deputy.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Deputy","thai-name":"ปลัดอำเภอ",description:"The Deputy gains the Sheriff's abilities if the Sheriff dies.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-none-sheriff",result:"-gain-role-sheriff"}]},{name:"Apothecary","thai-name":"เภสัชกร",description:"Is informed of who will be killed each night and has one potion to save and one potion to intensify the kill.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Cursed","thai-name":"ผู้ต้องสาป",description:"If targeted by a Werewolf for killing, they transform into a Werewolf instead of dying.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolfs",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Diseased","thai-name":"ผู้ติดเชื้อ",description:"If a Werewolf kills the Diseased player, the Werewolves cannot kill on the following night.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Spirit Medium","thai-name":"ผู้สื่อวิญญาณ",description:"Dead players can write notes to the Spirit Medium, providing clues to the living players.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Undertaker","thai-name":"สัปเหร่อ",description:"One time per game, the undertaker can dig a grave to see the role of a dead player.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Old Hag","thai-name":"มนุษย์ยายแก่",description:"At night, chooses a player who must leave the village the next day.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Old Man","thai-name":"ผู้สูงอายุ",description:"Will die within 3 days.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Necromancer","thai-name":"ผู้คืนชีพคนตาย",description:"Two times per game, copy an ability from a player, cannot copy from a player two times in row.","variant-count":1,gem:"Townfolks","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Dodger","thai-name":"ผู้หลบหลีก",description:"One time per game, can send the effect received toward a player at night.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Sponge","thai-name":"ฟองน้ำ",description:"During voting, if the Sponge receives the most points, the person with the next highest vote count is lynched.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Spellbinder","thai-name":"ผู้ลงมนต์",description:"Wakes up first and touches one player; that player does not wake up or use their ability during that night.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Vigilante","thai-name":"ศาลเตี้ย",description:"Have one time ability to kill a player during the night, if killed a townfolk, the vigilante will die afterward from guilt","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Werewolf","thai-name":"มนุษย์หมาป่า",description:"Each night, collectively choose one player to eliminate.","variant-count":10,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0,"default-amount":2},{name:"Alpha Werewolf","thai-name":"มนุษย์หมาป่าอัลฟ่า",description:"Each night, collectively choose one player to eliminate. Can turn a player who's not being a werewolf, to be one","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Dire Wolf","thai-name":"หมาป่าโลกันตร์",description:"Each night, along with the wolves, choose a player to eliminate. During the first night, choose a player to be your companion. You are eliminated if the player is eliminated.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Guardian Wolf","thai-name":"หมาป่าผู้พิทักษ์",description:"One time per game, a guardian wolf can choose a fellow werewolf to be protected from dying.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Minion","thai-name":"ลูกสมุน",description:"Wins with the Werewolves. Knows who the Werewolves are, but the Werewolves do not know the Minion.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Mystic Wolf","thai-name":"หมาป่าลึกลับ",description:"A Werewolf with a limited 2 times investigative ability, can tell the role of a non-werewolf characters.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Wolf Cub","thai-name":"ลูกหมาป่า",description:"A Werewolf with a limited 2 times investigative ability, can tell the role of a non-werewolf characters. The wolf cub cannot do killing votes, but in 3 days or all the wolves are killed, will become a werewolf","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Nightmare Werewolf","thai-name":"หมาป่าแห่งฝันร้าย",description:'Can impose a "nightmare" on a player, affecting their abilities to be affected on a random player instead',"variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Dream Wolf","thai-name":"หมาป่าผู้หลับฝัน",description:"A Werewolf who does not know the other Werewolves, but the other Werewolves know them.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Squire","thai-name":"คหบดีชนบท",description:"Know who the Werewolves are, win if the werewolves win.","variant-count":1,gem:"Townfolks","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Voodoo Lady","thai-name":"หญิงสาวผู้ถือตุ๊กตาต้องสาป",description:"The Voodoo Lady curses a player; if that player nominates anyone for lynching, the cursed player dies.","variant-count":1,gem:"Townfolks","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Tanner","thai-name":"ผู้สิ้นหวัง",description:"Wins only if they are lynched by the villagers.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Doppelgänger","thai-name":"ตัวแทน",description:"On the first night, chooses another player. If that player dies, the Doppelgänger takes on their role and abilities.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"The Fool","thai-name":"คนบ้า",description:"Wins only if they can manipulating the other villagers to be lynched to death.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Bookie","thai-name":"เจ้ามือแทงพนัน",description:"At night, guess who will be lynched on the next day, Wins by correctly betting on who will be lynched.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Sleuth","thai-name":"นักสืบ",description:"Can reveal themselves to guess roles; if successful, they win alone.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Pacifist","thai-name":"ผู้รักสันติ",description:"Can make another player's vote count as two, or prevent their own vote from counting.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Nostradamus","thai-name":"นอสตราดามุส",description:"One time per game, wakes up and can look at a set number of cards; the last card they look at determines their winning team.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Reaper","thai-name":"ยมทูต",description:"A standalone killer who wins if they are one of the last two players alive.","variant-count":1,gem:"Specials","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Cult Leader","thai-name":"ผู้นำลัทธิ",description:"Each night, can add a player to their cult. Wins if all remaining players are part of their cult.","variant-count":1,gem:"Specials","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Vampire","thai-name":"แวมไพร์",description:"Belonging to a separate Vampire faction, during the night, can collectively vote a player to be cut and being converted within 1 days. Wins only if all the players are vampires","variant-count":1,gem:"Vampires","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Zombie","thai-name":"ซอมบี้",description:"Collectively vote a player to turn them into a new zombie. Wins only if all the players are zombies","variant-count":1,gem:"Zombies","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Infected","thai-name":"ผู้ติดเชื้อ",description:"Starting as a villager, when died will transform into a zombie.","variant-count":1,gem:"Zombies","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0}];let ge=new Map;function m(e,n="info"){const t=document.getElementById("messageBox");if(!t){console.error("Message box element not found!");return}t.textContent=e,t.className=`message-box ${n} active`,setTimeout(()=>{t.classList.remove("active")},3e3)}function We(){return Math.random().toString(36).substring(2,8).toUpperCase()}function un(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){const n=Math.random()*16|0;return(e==="x"?n:n&3|8).toString(16)})}function J(e,n){const t=parseInt(e.slice(1,3),16),o=parseInt(e.slice(3,5),16),a=parseInt(e.slice(5,7),16);return`rgba(${t}, ${o}, ${a}, ${n})`}async function ve(e){if(ge.has(e))return ge.get(e);try{const n=await fetch(e);if(!n.ok)throw new Error(`HTTP error! status: ${n.status}`);const t=await n.blob();return new Promise((o,a)=>{const i=new FileReader;i.onloadend=()=>{ge.set(e,i.result),o(i.result)},i.onerror=a,i.readAsDataURL(t)})}catch(n){throw console.error(`[ERROR] Error fetching or converting image ${e}:`,n),n}}function be(e,n){const t=e.toLowerCase().replace(/\s/g,"-");if(n&&n.game_data&&n.game_data.role_image_map){const o=n.game_data.role_image_map[e];if(o)return o}return`${gn}${t}-v-1.jpeg`}async function Ge(e,n){if(!e)return console.error("[ERROR] Supabase client not initialized in room-service.fetchRoomData."),m("Database connection error. Please refresh.","error"),null;try{const{data:t,error:o}=await e.from("Rooms").select("*").eq("id",n).single();if(o&&o.code!=="PGRST116")throw o;return t&&(t.players=t.players||[],t.game_data=t.game_data||{},t.game_data.current_day=t.game_data.current_day||0,t.game_data.game_state=t.game_data.game_state||"lobby",t.game_data.role_settings=t.game_data.role_settings||[],t.game_data.gem_settings=t.game_data.gem_settings||[],t.game_data.role_image_map=t.game_data.role_image_map||{},t.game_data.players_roles_assigned=t.game_data.players_roles_assigned||!1,t.game_data.center_role_pool=t.game_data.center_role_pool||[],t.game_data.players_ready=t.game_data.players_ready||[],t.game_data.gem_settings.length===0&&(console.log("[DEBUG] Initializing gem settings as empty."),t.game_data.gem_settings=Object.keys(I).filter(a=>a!=="None").map(a=>({gem:a,count:0}))),t.game_data.role_settings.length===0&&(console.log("[DEBUG] Initializing role settings as empty."),t.game_data.role_settings=K.map(a=>({role:a.name,count:a["variant-count"]||1,disabled:a.isPrimarilyDisabled||!1})))),console.log("[DEBUG] Fetched room data:",t),t}catch(t){return console.error("[ERROR] Error fetching room data:",t),m(`Error fetching room: ${t.message}`,"error"),null}}async function hn(e,n,t){if(!e)return console.error("[ERROR] Supabase client not initialized in room-service.createRoom."),m("Database connection error. Please refresh.","error"),null;try{const o=Math.random().toString(36).substring(2,8).toUpperCase(),a=[{id:t,name:"Host",is_host:!0,role:null,is_alive:!0}],i=Object.keys(I).filter(d=>d!=="None").map(d=>({gem:d,count:0})),r=K.map(d=>({role:d.name,count:d["variant-count"]||1,disabled:d.isPrimarilyDisabled||!1})),{data:s,error:c}=await e.from("Rooms").insert([{id:o,name:n,host_id:t,players:a,room_background_url:_e[Math.floor(Math.random()*_e.length)],game_data:{current_day:0,game_state:"lobby",shared_counter:0,shared_random:0,role_settings:r,gem_settings:i,players_roles_assigned:!1,center_role_pool:[],role_image_map:{},players_ready:[]}}]).select().single();if(c)throw c;return m(`Room '${n}' created with ID: ${s.id}`,"success"),console.log("[DEBUG] Room created:",s),s}catch(o){return console.error("[ERROR] Error creating room:",o),m(`Error creating room: ${o.message}`,"error"),null}}async function pn(e,n,t){if(!e)return console.error("[ERROR] Supabase client not initialized in room-service.joinRoom."),m("Database connection error. Please refresh.","error"),null;try{const{data:o,error:a}=await e.from("Rooms").select("players").eq("id",n).single();if(a)throw a;const i=o.players||[];if(i.some(d=>d.id===t.id))return m("You are already in this room.","info"),o;const r=[...i,{...t,is_host:!1,role:null,is_alive:!0}],{data:s,error:c}=await e.from("Rooms").update({players:r}).eq("id",n).select().single();if(c)throw c;return m(`${t.name} joined room ${n}`,"success"),console.log("[DEBUG] Player joined room:",s),s}catch(o){return console.error("[ERROR] Error joining room:",o),m(`Error joining room: ${o.message}`,"error"),null}}async function fn(e,n,t){if(!e)return console.error("[ERROR] Supabase client not initialized in room-service.leaveRoom."),m("Database connection error. Please refresh.","error"),!1;try{const{data:o,error:a}=await e.from("Rooms").select("players, host_id").eq("id",n).single();if(a)throw a;let i=o.players||[];const r=o.host_id===t;let s=i.filter(d=>d.id!==t);r&&s.length>0&&(s[0].is_host=!0,console.log(`[DEBUG] New host assigned: ${s[0].id}`));const{error:c}=await e.from("Rooms").update({players:s,host_id:r&&s.length>0?s[0].id:r&&s.length===0?null:o.host_id}).eq("id",n);if(c)throw c;if(s.length===0){const{error:d}=await e.from("Rooms").delete().eq("id",n);d?(console.error("[ERROR] Error deleting empty room:",d),m(`Error cleaning up room: ${d.message}`,"error")):console.log(`[DEBUG] Room ${n} deleted as it is now empty.`)}return m("Left room.","info"),console.log("[DEBUG] Player left room."),!0}catch(o){return console.error("[ERROR] Error leaving room:",o),m(`Error leaving room: ${o.message}`,"error"),!1}}async function $(e,n){return console.error("[ERROR] Supabase client not initialized in room-service.kickPlayer."),m("Database connection error. Please refresh.","error"),!1}async function Ae(e,n){return console.error("[ERROR] Supabase client not initialized in room-service.renameRoomTitle."),m("Database connection error. Please refresh.","error"),!1}async function yn(e,n){return console.log(`[DEBUG] [confirmRenameRoom] Attempting to rename room ${e} to ${n}`),await Ae()}async function vn(e,n){{console.error("[ERROR] Supabase client not initialized in room-service.incrementCounter."),m("Database connection error. Please refresh.","error");return}}async function bn(e){{console.error("[ERROR] Supabase client not initialized in room-service.generateRandomValue."),m("Database connection error. Please refresh.","error");return}}async function xe(e,n,t){{console.error("[ERROR] Supabase client not initialized in room-service.updateRoleAmount."),m("Database connection error. Please refresh.","error");return}}async function wn(e,n,t){{console.error("[ERROR] Supabase client not initialized in room-service.toggleRoleDisabled."),m("Database connection error. Please refresh.","error");return}}async function Ue(e,n,t){{console.error("[ERROR] Supabase client not initialized in room-service.updateGemCount."),m("Database connection error. Please refresh.","error");return}}async function En(e,n){return console.error("[ERROR] Supabase client not initialized in room-service.addGemToSettings."),m("Database connection error. Please refresh.","error"),!1}async function Rn(e,n){{console.error("[ERROR] Supabase client not initialized in room-service.removeGemFromSettings."),m("Database connection error. Please refresh.","error");return}}async function Cn(e,n){{console.error("[ERROR] Supabase client not initialized in room-service.startGame."),m("Database connection error. Please refresh.","error");return}}function kn(e,n){$e.classList.add("active"),n(e),console.log("[DEBUG] Showing roles overlay.")}function Pe(){$e.classList.remove("active"),console.log("[DEBUG] Hiding roles overlay.")}async function Me(e,n){console.log(`[DEBUG] Showing detailed overlay for role: ${e.name}`);const t=e["chosen-image-url"]||be(e.name,n);De.src=await ve(t),De.alt=`Image for ${e.name}`,an.textContent=e.name,sn.textContent=e["thai-name"],rn.textContent=e.description,ce.innerHTML="";const o=document.createElement("span");o.className="capsule-tag rough-gem-tag",o.textContent=e["rough-gem"],ce.appendChild(o);const a=document.createElement("span");a.className=`capsule-tag gem-tag gem-${e.gem.replace(/\s/g,"")}`,a.textContent=e.gem,ce.appendChild(a),Oe.classList.add("active"),console.log("[DEBUG] Detailed overlay activated.")}function He(){Oe.classList.remove("active"),console.log("[DEBUG] Detailed overlay hidden.")}function Tn(e,n){if(!e||!e.game_data||!e.game_data.gem_included_settings)return;me.innerHTML="";const t=e.game_data.gem_included_settings.map(i=>i.gem),a=Object.keys(I).filter(i=>i!=="None").filter(i=>!t.includes(i));a.length===0?me.innerHTML='<p class="text-center text-gray-600">All available categories are already added.</p>':a.forEach(i=>{const r=I[i],s=document.createElement("div");s.className="available-gem-item",s.dataset.gemName=i,s.innerHTML=`
                <img src="${r.image}" alt="${i}" class="available-gem-item-image">
                <span class="available-gem-item-name">${i}</span>
            `,s.addEventListener("click",async()=>{await n(i)&&we()}),me.appendChild(s)}),Q.classList.add("active"),console.log("[DEBUG] Showing add gem modal.")}function we(){Q.classList.remove("active"),console.log("[DEBUG] Hiding add gem modal.")}function Ee(){ln.classList.remove("active"),fe.value="",console.log("[DEBUG] [hideRenameRoomModal] Rename modal hidden.")}function Bn(){Ee(),console.log("[DEBUG] [cancelRenameRoom] Rename modal cancelled.")}function Nn(){fe.value=j.textContent,fe.focus()}let O=!1,q=!1;function W(e,n,t,o,a,i){var d,u,v;console.log("[DEBUG] [updateRoomUI] Received roomData:",e);const r=n===(e==null?void 0:e.host_id);if(!e){M.innerHTML="",se.textContent="Counter: 0",re.textContent="N/A",ie.textContent="",le.style.backgroundImage="none",j.textContent="WolfVille Village",T.classList.remove("room-title-sign"),B.classList.add("hidden"),console.log("[DEBUG] [updateRoomUI] Room data is null, clearing UI."),a=[],i([],[]),V.classList.add("hidden"),p.classList.remove("active"),q=!1,F.classList.add("hidden"),ye.classList.add("hidden"),X.classList.add("hidden");return}Ze.classList.remove("hidden"),Se.classList.remove("hidden"),V.classList.remove("hidden"),F.classList.remove("hidden"),ye.classList.remove("hidden"),console.log(`[DEBUG] [updateRoomUI] Current user (Local ID: ${n}, Short ID: ${t}) is host: ${r}`),e.game_data&&e.game_data.roomName?(j.textContent=e.game_data.roomName,console.log(`[DEBUG] [updateRoomUI] Setting room name display to: ${e.game_data.roomName}`)):(j.textContent="WolfVille Village",console.log("[DEBUG] [updateRoomUI] Setting room name display to default: WolfVille Village")),r?(B.classList.remove("hidden"),console.log("[DEBUG] [updateRoomUI] Rename button shown (isHost)."),X.classList.remove("hidden")):(B.classList.add("hidden"),console.log("[DEBUG] [updateRoomUI] Rename button hidden (not host)."),X.classList.add("hidden")),T.contains(B)||(T.appendChild(B),console.log("[DEBUG] [updateRoomUI] Rename button appended to dynamicMainTitle.")),e.id?(ie.textContent=e.id,console.log("[DEBUG] [updateRoomUI] Displaying Room ID:",e.id)):(ie.textContent="N/A",console.warn("[DEBUG] [updateRoomUI] roomData.id is missing or null. Cannot display Room ID.")),e.game_data&&e.game_data.background_image_url?(le.style.backgroundImage=`url('${e.game_data.background_image_url}')`,console.log("[DEBUG] [updateRoomUI] Setting background image:",e.game_data.background_image_url)):(le.style.backgroundImage="none",console.warn("[DEBUG] [updateRoomUI] No background image URL found in roomData.game_data."));const s=e.players||[];console.log("[DEBUG] [updateRoomUI] Players in room:",s),M.innerHTML="",console.log("[DEBUG] [updateRoomUI] Player list cleared.");let c=null;if(s.length>0)s.forEach(l=>{l["local-id"]===n&&(c=l);const h=document.createElement("div");h.className="player-card",l.uid===t&&(h.classList.add("current-player"),console.log(`[DEBUG] [updateRoomUI] Highlighting current player: ${l.name}`));const y=l["local-id"]===e.host_id?"host-tag":"player-tag",g=l["local-id"]===e.host_id?"Host":"Player";if(h.innerHTML=`
                <div class="player-card-name">${l.name}</div>
                <div class="player-tags-container">
                    <span class="player-role-tag ${y}">${g}</span>
                    <span class="player-status-tag status-${l.status||"Alive"}">${l.status||"Alive"}</span>
                </div>
            `,r&&l.uid!==t){const f=document.createElement("button");f.className="kick-player-btn",f.textContent="x",f.title=`Kick ${l.name} (${l.uid})`,f.dataset.playerId=l.uid,f.addEventListener("click",()=>o(l.uid)),h.appendChild(f),console.log(`[DEBUG] [updateRoomUI] Added kick button for ${l.name}.`)}M.appendChild(h),console.log(`[DEBUG] [updateRoomUI] Added player card for: ${l.name}`)});else{const l=document.createElement("div");l.textContent="No players in this room yet.",l.className="text-center text-gray-400 p-4",M.appendChild(l),console.log('[DEBUG] [updateRoomUI] No players found, displaying "No players" message.')}if(e.game_data&&typeof e.game_data.counter=="number"?(se.textContent=`Counter: ${e.game_data.counter}`,console.log(`[DEBUG] [updateRoomUI] Counter updated to: ${e.game_data.counter}`)):(se.textContent="Counter: 0",console.log("[DEBUG] [updateRoomUI] Counter reset to 0.")),e.game_data&&typeof e.game_data.randomValue<"u"?(re.textContent=`Random Value: ${e.game_data.randomValue}`,console.log(`[DEBUG] [updateRoomUI] Random Value updated to: ${e.game_data.randomValue}`)):(re.textContent="N/A",console.log("[DEBUG] [updateRoomUI] Random Value reset to N/A.")),In(((d=e.game_data)==null?void 0:d.role_settings)||[]),console.log("[DEBUG] [updateRoomUI] Called renderRoleList."),xn(((u=e.game_data)==null?void 0:u.gem_included_settings)||[],r),console.log("[DEBUG] [updateRoomUI] Called renderGemSettings."),c){const l=c.roles||[];JSON.stringify(l)!==JSON.stringify(a)&&(console.log("[DEBUG] Player roles changed. Updating my role cards."),i(a,l,e),a.splice(0,a.length,...l))}else a.length>0&&(console.log("[DEBUG] Current player not found in room. Clearing my role cards."),i([],[],e),a.length=0);Dn(((v=e.game_data)==null?void 0:v.center_role_pool)||[],e)}async function Re(e,n,t,o=!1){const a=n["chosen-image-url"]||be(n.name,t),i=K.find(s=>s.name==="Nobody"),r=i?be(i.name,t):"https://placehold.co/100x100/cccccc/000000?text=No+Image";console.log(`[DEBUG] Attempting to load primary image for ${n.name}: ${a}`);try{const s=await ve(a);e.src=s,e.alt=`Image for ${n.name}`,console.log(`[DEBUG] Displaying static image for ${n.name}: ${a}`)}catch(s){console.error(`[ERROR] Failed to load primary image for ${n.name} from ${a}. Attempting fallback to Nobody image.`,s);try{const c=await ve(r);e.src=c,e.alt=`Fallback image for ${n.name} (Nobody)`,console.log(`[DEBUG] Displaying fallback image for ${n.name}: ${r}`)}catch(c){console.error(`[ERROR] Failed to load Nobody fallback image from ${r}:`,c),e.src=o?"https://placehold.co/180x180/ff0000/ffffff?text=Error":"https://placehold.co/100x100/ff0000/ffffff?text=Error",e.alt=`Error loading image for ${n.name}`}}}function In(e,n,t){console.log("[DEBUG] [renderRoleList] Starting role list rendering."),pe.innerHTML="",console.log("[DEBUG] [renderRoleList] Cleared roleListDiv content."),K.forEach(o=>{const a=e.find(ae=>ae.role===o.name)||{role:o.name,amount:o["default-amount"]!==void 0?o["default-amount"]:1,isDisabled:o.isPrimarilyDisabled||!1},i=document.createElement("div");i.className=`role-item gem-${o.gem.replace(/\s/g,"")}`,a.isDisabled&&i.classList.add("disabled"),i.dataset.roleName=o.name;const r=document.createElement("div");r.className="role-text-content";const s=document.createElement("div");s.className="role-name",s.textContent=o.name;const c=document.createElement("div");c.className="role-thai-name",c.textContent=o["thai-name"];const d=document.createElement("div");d.className="role-description";const u=document.createElement("p");u.className="description-text",u.textContent=o.description,d.appendChild(u),r.appendChild(s),r.appendChild(c),r.appendChild(d),i.appendChild(r);const v=document.createElement("div");v.className="role-item-capsules-container";const l=document.createElement("span");l.className="capsule-tag rough-gem-tag",l.textContent=o["rough-gem"],v.appendChild(l);const h=document.createElement("span");h.className=`capsule-tag gem-tag gem-${o.gem.replace(/\s/g,"")}`,h.textContent=o.gem,v.appendChild(h),i.appendChild(v);const y=document.createElement("div");y.className="role-controls";const g=document.createElement("button");g.className="disable-role-button",g.textContent=a.isDisabled?"✖":"✔",g.title=a.isDisabled?"Enable Role":"Disable Role",g.dataset.roleName=o.name,g.dataset.action="toggleDisable",g.style.backgroundColor="#756d7a",g.disabled=o.gem==="None",y.appendChild(g);const f=document.createElement("button");f.className="role-control-button minus",f.textContent="-",f.dataset.roleName=o.name,f.dataset.action="decrement",f.disabled=a.amount===0,f.style.backgroundColor="#756d7a",y.appendChild(f);const b=document.createElement("span");b.className="role-pooling-count",b.textContent=a.amount,b.style.backgroundColor="rgba(255, 255, 255, 0.7)",b.style.border="1px solid rgba(0, 0, 0, 0.1)",b.style.borderRadius="0.5rem",b.style.padding="0 0.25rem",b.style.backdropFilter="blur(2px)",b.style.webkitBackdropFilter="blur(2px)",y.appendChild(b);const E=document.createElement("button");E.className="role-control-button plus",E.textContent="+",E.dataset.roleName=o.name,E.dataset.action="increment",E.style.backgroundColor="#756d7a",y.appendChild(E),i.appendChild(y),pe.appendChild(i),console.log(`[DEBUG] [renderRoleList] Added role item for: ${o.name}`)}),console.log("[DEBUG] [renderRoleList] Finished role list rendering.")}function Ln(e){console.log("[DEBUG] [renderAllRoleCardsToOverlay] Starting overlay role card rendering."),Le.innerHTML="",console.log("[DEBUG] [renderAllRoleCardsToOverlay] Cleared rolesGridContainerOverlay content."),K.forEach(n=>{const t=document.createElement("div");t.className="role-card-overlay",t.dataset.roleName=n.name;const o=I[n.gem]||I.None,a=document.createElement("div");a.className="role-header-band-overlay",a.textContent=n.name.toUpperCase(),t.appendChild(a);const i=document.createElement("img");i.className="gem-icon-overlay",i.src=o.image,i.alt=`${o.name} icon`,t.appendChild(i);const r=document.createElement("div");r.className="role-name-band-overlay",r.style.backgroundColor=J(o.color,.7);const s=document.createElement("div");s.className="band-text-wrapper";const c=document.createElement("span");c.className="band-english-name",c.textContent=n.name.toUpperCase(),s.appendChild(c);const d=document.createElement("span");d.className="band-thai-name",d.textContent=n["thai-name"],s.appendChild(d),r.appendChild(s),t.appendChild(r);const u=document.createElement("div");u.className="new-capsules-container-overlay";const v=document.createElement("span");v.className="capsule-tag rough-gem-tag",v.textContent=n["rough-gem"],u.appendChild(v);const l=document.createElement("span");l.className=`capsule-tag gem-tag gem-${n.gem.replace(/\s/g,"")}`,l.textContent=n.gem,u.appendChild(l),t.appendChild(u);const h=document.createElement("div");h.className="role-image-container-overlay";const y=document.createElement("img");y.className="role-image-overlay",Re(y,n,e,!0),h.appendChild(y),t.appendChild(h);const g=document.createElement("div");g.className="role-content-area-overlay";const f=document.createElement("div");f.className="role-description-overlay";const b=document.createElement("p");b.className="description-text-overlay",b.textContent=n.description,f.appendChild(b),g.appendChild(f),t.appendChild(g),t.addEventListener("click",()=>Me(n,e)),Le.appendChild(t),console.log(`[DEBUG] [renderAllRoleCardsToOverlay] Added overlay role card for: ${n.name}`)}),console.log("[DEBUG] [renderAllRoleCardsToOverlay] Finished overlay role card rendering.")}function Dn(e,n){if(console.log("[DEBUG] [renderCenterRolePool] Starting center role pool rendering."),de.innerHTML="",e.length===0){de.textContent="No role cards in the center pool.";return}e.forEach(t=>{const o=document.createElement("div");o.className="center-pool-card",o.style.margin="0.5rem",o.style.transform=`rotate(${Math.random()*6-3}deg)`;const a=I[t.gem]||I.None,i=document.createElement("div");i.className="role-header-band-overlay",i.textContent=t.name.toUpperCase(),o.appendChild(i);const r=document.createElement("img");r.className="gem-icon-overlay",r.src=a.image,r.alt=`${a.name} icon`,o.appendChild(r);const s=document.createElement("div");s.className="role-name-band-overlay",s.style.backgroundColor=J(a.color,.7);const c=document.createElement("div");c.className="band-text-wrapper";const d=document.createElement("span");d.className="band-english-name",d.textContent=t.name.toUpperCase();const u=document.createElement("span");u.className="band-thai-name",u.textContent=t["thai-name"],c.appendChild(d),c.appendChild(u),s.appendChild(c),o.appendChild(s);const v=document.createElement("div");v.className="new-capsules-container-overlay";const l=document.createElement("span");l.className="capsule-tag rough-gem-tag",l.textContent=t["rough-gem"],v.appendChild(l);const h=document.createElement("span");h.className=`capsule-tag gem-tag gem-${t.gem.replace(/\s/g,"")}`,h.textContent=t.gem,v.appendChild(h),o.appendChild(v);const y=document.createElement("div");y.className="role-image-container-overlay";const g=document.createElement("img");g.className="role-image-overlay",Re(g,t,n,!0),y.appendChild(g),o.appendChild(y);const f=document.createElement("div");f.className="role-content-area-overlay";const b=document.createElement("div");b.className="role-description-overlay";const E=document.createElement("p");E.className="description-text-overlay",E.textContent=t.description,b.appendChild(E),f.appendChild(b),o.appendChild(f),de.appendChild(o)}),console.log("[DEBUG] [renderCenterRolePool] Finished center role pool rendering.")}async function A(e,n,t){console.log("[DEBUG] [renderPlayerRoleCards] Old Roles:",e,"New Roles:",n),D.style.pointerEvents="none";const o=n.filter(a=>!e.some(i=>JSON.stringify(i)===JSON.stringify(a)));if(D.innerHTML="",n.length===0){D.innerHTML='<p class="text-center text-gray-400 p-4">No roles assigned yet.</p>',D.style.pointerEvents="none";return}for(const a of n){const i=await _n(a,t);D.appendChild(i),o.some(r=>JSON.stringify(r)===JSON.stringify(a))&&(i.classList.add("new-role-animation"),setTimeout(()=>{i.classList.remove("new-role-animation"),ee()},500))}ee(),setTimeout(()=>{D.style.pointerEvents=O?"auto":"none"},600)}async function _n(e,n){const t=document.createElement("div");t.className="player-role-card",t.dataset.roleName=e.name;const o=I[e.gem]||I.None,a=document.createElement("div");a.className="role-header-band-overlay",a.textContent=e.name.toUpperCase(),t.appendChild(a);const i=document.createElement("img");i.className="gem-icon-overlay",i.src=o.image,i.alt=`${o.name} icon`,t.appendChild(i);const r=document.createElement("div");r.className="role-name-band-overlay",r.style.backgroundColor=J(o.color,.7);const s=document.createElement("div");s.className="band-text-wrapper";const c=document.createElement("span");c.className="band-english-name",c.textContent=e.name.toUpperCase();const d=document.createElement("span");d.className="band-thai-name",d.textContent=e["thai-name"],s.appendChild(c),s.appendChild(d),r.appendChild(s),t.appendChild(r);const u=document.createElement("div");u.className="new-capsules-container-overlay";const v=document.createElement("span");v.className="capsule-tag rough-gem-tag",v.textContent=e["rough-gem"],u.appendChild(v);const l=document.createElement("span");l.className=`capsule-tag gem-tag gem-${e.gem.replace(/\s/g,"")}`,l.textContent=e.gem,u.appendChild(l),t.appendChild(u);const h=document.createElement("div");h.className="role-image-container-overlay";const y=document.createElement("img");y.className="role-image-overlay",await Re(y,e,n,!0),h.appendChild(y),t.appendChild(h);const g=document.createElement("div");g.className="role-content-area-overlay";const f=document.createElement("div");f.className="role-description-overlay";const b=document.createElement("p");return b.className="description-text-overlay",b.textContent=e.description,f.appendChild(b),g.appendChild(f),t.appendChild(g),t.addEventListener("click",E=>{O&&(E.stopPropagation(),Me(e,n))}),t}function ee(){const e=Array.from(D.children),n=220,t=320,o=50,a=window.innerWidth,i=window.innerHeight;e.forEach((r,s)=>{if(r.style.transition="transform 0.5s ease-out, top 0.5s ease-out, left 0.5s ease-out, opacity 0.5s ease-out",!O)r.style.top=`${i-o+s*2}px`,r.style.left=`${a/2-n/2+s*2}px`,r.style.transform=`rotate(${Math.random()*6-3}deg) scale(1)`,r.style.opacity="1",r.style.zIndex=950+s;else{const c=e.length,d=a*.8,u=30,v=n*.7;let l=(d-n)/Math.max(1,c-1);l=Math.max(u,Math.min(v,l));const h=(c-1)*l+n,y=a/2-h/2,g=i/2-t/2,f=20,b=15,E=c>1?b*2/(c-1):0,ae=c>1?-b:0;r.style.left=`${y+s*l}px`,r.style.top=`${g+(s%2===0?0:f)}px`,r.style.transform=`rotate(${ae+s*E}deg) scale(1)`,r.style.opacity="1",r.style.zIndex=970+s}})}function Gn(){O=!O,D.classList.toggle("active",O),ee()}function xn(e,n,t){if(console.log("[DEBUG] [renderGemSettings] Starting gem settings rendering. Received settings:",e),S.innerHTML="",e.length===0){const o=document.createElement("p");o.className="text-center text-gray-400 p-4",o.textContent="No gem categories added yet.",S.appendChild(o)}else e.forEach(o=>{const a=o.gem,i=o.count,r=I[a];if(!r){console.warn(`[WARNING] Gem data not found for ${a}. Skipping.`);return}const s=document.createElement("div");s.className="gem-setting-item",s.dataset.gemName=a;const c=document.createElement("div");c.className="gem-setting-image-area",c.style.backgroundColor=J(r.color,.4);const d=document.createElement("img");d.className="gem-setting-image",d.src=r.image,d.alt=`${a} icon`,c.appendChild(d),s.appendChild(c);const u=document.createElement("button");u.className="gem-setting-close-btn",u.textContent="✖",u.title=`Remove ${a}`,u.dataset.gemName=a,u.dataset.action="removeGem",u.disabled=!n,s.appendChild(u);const v=document.createElement("div");v.className="gem-setting-separator",s.appendChild(v);const l=document.createElement("div");l.className="gem-setting-counter-area",l.style.backgroundColor=J(r.color,.3);const h=document.createElement("button");h.className="gem-setting-button",h.textContent="-",h.dataset.gemName=a,h.dataset.action="decrementGem",h.disabled=i===0||!n,l.appendChild(h);const y=document.createElement("span");y.className="gem-setting-count",y.textContent=i,l.appendChild(y);const g=document.createElement("button");g.className="gem-setting-button",g.textContent="+",g.dataset.gemName=a,g.dataset.action="incrementGem",g.disabled=!n,l.appendChild(g),s.appendChild(l),S.appendChild(s)});n?H.classList.remove("hidden"):H.classList.add("hidden"),S.contains(H)||S.appendChild(H),console.log("[DEBUG] [renderGemSettings] Finished gem settings rendering.")}function je(){q=!q,q?(p.classList.add("active"),p.style.transform="translateX(0)"):(p.classList.remove("active"),p.style.transform="translateX(-100%)")}function x(e){console.log(`[DEBUG] [showView] Called with: ${e}`),Be.classList.add("hidden"),Ne.classList.add("hidden"),Ie.classList.add("hidden"),Y.classList.remove("active"),Z.classList.remove("active"),ue.classList.add("hidden"),he.classList.add("hidden"),z.value="",p.classList.remove("active"),V.classList.add("hidden"),D.innerHTML="",D.classList.remove("active"),F.classList.add("hidden"),ye.classList.add("hidden"),X.classList.add("hidden"),e==="player-name"?(T.classList.add("hidden"),Be.classList.remove("hidden"),B.classList.add("hidden")):e==="room-selection"?(T.classList.remove("hidden"),j.textContent="WolfVille Village",T.classList.remove("room-title-sign"),T.contains(B)&&T.removeChild(B),B.classList.add("hidden"),Ne.classList.remove("hidden"),Ce("create-room")):e==="my-room"?(T.classList.remove("hidden"),T.classList.add("room-title-sign"),T.contains(B)||T.appendChild(B),Ie.classList.remove("hidden"),V.classList.remove("hidden"),F.classList.remove("hidden")):console.warn(`[DEBUG] [showView] Unknown view requested: ${e}`),console.log(`[DEBUG] [showView] Displaying: ${e}`)}function Ce(e){console.log(`[DEBUG] [showTab] Called with: ${e}`),Y.classList.remove("active"),Z.classList.remove("active"),ue.classList.add("hidden"),he.classList.add("hidden"),z.value="",e==="create-room"?(Y.classList.add("active"),ue.classList.remove("hidden"),console.log("[DEBUG] [showTab] Create Room Tab content shown.")):e==="join-room"?(Z.classList.add("active"),he.classList.remove("hidden"),console.log("[DEBUG] [showTab] Join Room Tab content shown.")):console.warn(`[DEBUG] [showTab] Unknown tab requested: ${e}`)}let R=null,C=null,k=null,ne=null,_=null,L=null,N=!1,w=null,P=[];async function Un(){try{R=Ke(),k=typeof crypto<"u"&&typeof crypto.randomUUID=="function"?crypto.randomUUID():un(),C=We(),console.log("[DEBUG] App initialized. Local UUID (localId):",k,"Short ID (userId):",C),m("Supabase initialized and ready.","success");const e=R.channel("test_channel");e.subscribe(n=>{n==="SUBSCRIBED"?(console.log("[DEBUG] [Realtime Test] Successfully subscribed to test_channel. Realtime connection appears to be working."),e.unsubscribe()):n==="CHANNEL_ERROR"?console.error("[DEBUG] [Realtime Test] Error subscribing to test_channel. Realtime connection might be problematic."):console.log(`[DEBUG] [Realtime Test] Test channel status: ${n}`)}),x("player-name")}catch(e){console.error("[ERROR] Error initializing app:",e),m(`Error initializing app: ${e.message}`,"error")}}function ze(e){console.log(`[DEBUG] [listenToRoom] Attempting to listen to room: ${e}`),L&&(R.removeChannel(L),L=null,console.log("[DEBUG] [listenToRoom] Existing room subscription removed.")),L=R.channel(`room:${e}`).on("postgres_changes",{event:"*",schema:"public",table:"Rooms",filter:`id=eq.${e}`},async n=>{if(console.log(`[DEBUG] [Realtime Event Received] Type: ${n.eventType}, New:`,n.new,"Old:",n.old),n.eventType==="UPDATE"||n.eventType==="INSERT"){const t=await Ge(R,e);if(t){if(!(t.players||[]).some(i=>i["local-id"]===k)){console.log(`[DEBUG] [KICKED_DETECTION] Current user ${k} no longer in room ${_}. Forcing exit.`),m("You have been removed from the room!","error"),L&&(R.removeChannel(L),L=null),W(null,k,C,i=>$(),P,A),_=null,N=!1,x("room-selection");return}w=t,N=k===w.host_id,console.log("[DEBUG] [listenToRoom] Realtime update (refetched) - FULL currentRoomData:",JSON.stringify(w,null,2)),W(w,k,C,i=>$(),P,A)}else console.warn(`[WARN] [listenToRoom] Refetch of room ${e} returned null after update event.`),m("Room data could not be fetched. You may have been disconnected.","error"),L&&(R.removeChannel(L),L=null),W(null,k,C,o=>$(),P,A),_=null,N=!1,x("room-selection")}else if(n.eventType==="DELETE"){console.log("[DEBUG] [listenToRoom] Room does not exist or was deleted."),m("Room does not exist or was deleted. You have been disconnected from this room.","error"),W(null,k,C,t=>$(),P,A),_=null,N=!1,x("room-selection");return}}).subscribe(n=>{n==="SUBSCRIBED"?console.log(`[DEBUG] [listenToRoom] Subscribed to room ${e} changes.`):n==="CHANNEL_ERROR"&&(console.error(`[ERROR] [listenToRoom] Error subscribing to room ${e}.`),m(`Error subscribing to room ${e}.`,"error"))}),_=e,z.value=e,console.log(`[DEBUG] [listenToRoom] currentRoomId set to: ${_}`),Ge(R,e).then(n=>{w=n,N=k===(w==null?void 0:w.host_id),console.log("[DEBUG] [listenToRoom] Initial fetch - FULL currentRoomData:",JSON.stringify(w,null,2)),W(w,k,C,t=>$(),P,A)})}Te.addEventListener("click",()=>{const e=ke.value.trim();e?(ne=e,C=We(),ke.disabled=!0,Te.disabled=!0,m(`Your name is set to: ${ne} (ID: ${C})`,"info"),x("room-selection")):m("Please enter a valid name.","error")});Y.addEventListener("click",()=>Ce("create-room"));Z.addEventListener("click",()=>Ce("join-room"));qe.addEventListener("click",async()=>{const e=await hn(R,ne,C,k,Xe.value);e&&(ze(e),x("my-room"))});Ye.addEventListener("click",async()=>{await pn(R,ne,C,k,z.value)&&(ze(z.value),x("my-room"))});Se.addEventListener("click",async()=>{await fn(R,_,C)});Qe.addEventListener("click",()=>{console.log("[DEBUG] Increment Counter button clicked."),vn()});en.addEventListener("click",()=>{console.log("[DEBUG] Generate Random button clicked."),bn()});B.addEventListener("click",()=>{Ae()&&(Nn(),renameRoomModal.classList.add("active"))});cn.addEventListener("click",async()=>{await yn(R,_,w,renameRoomInput.value)&&Ee()});dn.addEventListener("click",Bn);renameRoomModal.addEventListener("click",e=>{e.target===renameRoomModal&&Ee()});M.addEventListener("click",e=>{e.target.classList.contains("kick-player-btn")&&e.target.dataset.playerId&&$()});pe.addEventListener("click",e=>{const n=e.target,t=n.classList.contains("role-control-button")||n.classList.contains("disable-role-button"),o=n.closest(".role-controls");if(t&&o&&w){const a=n.dataset.roleName,i=n.dataset.action;if(console.log(`[DEBUG] Role control clicked: Role: ${a}, Action: ${i}`),a&&i){const r=ROLE_TEMPLATES.find(s=>s.name===a);if(r&&r.gem==="None"&&i==="toggleDisable"){m('Roles with gem "None" cannot be disabled/enabled.',"info");return}i==="increment"||i==="decrement"?xe():i==="toggleDisable"&&wn()}}else w||(console.warn("[WARN] Role control clicked but currentRoomData is not available."),m("Room data not loaded yet. Please wait.","info"))});S.addEventListener("click",e=>{const n=e.target,t=n.dataset.gemName,o=n.dataset.action;console.log(`[DEBUG] Gem control clicked: Gem: ${t}, Action: ${o}, IsHost: ${N}`),w&&N&&t&&o?o==="incrementGem"||o==="decrementGem"?Ue():o==="removeGem"&&Rn():w&&!N&&(o==="incrementGem"||o==="decrementGem"||o==="removeGem"||o==="removeGem")?m("Only the host can edit gem settings.","error"):w||(console.warn("[WARN] Gem control clicked but currentRoomData is not available."),m("Room data not loaded yet. Please wait.","info"))});H.addEventListener("click",()=>{console.log("[DEBUG] Add Gem button clicked. IsHost:",N),w&&N?Tn(w,e=>En()):w&&!N?m("Only the host can add new gem categories.","error"):(console.warn("[WARN] Add Gem button clicked but currentRoomData is not available."),m("Room data not loaded yet. Please wait.","info"))});cancelAddGemBtn.addEventListener("click",we);Q.addEventListener("click",e=>{e.target===Q&&we()});startGameBtn.addEventListener("click",()=>{console.log("[DEBUG] Start Game button clicked. IsHost:",N),Cn()});nn.addEventListener("click",()=>kn(w,Ln));tn.addEventListener("click",Pe);on.addEventListener("click",He);rolesOverlay.addEventListener("click",e=>{e.target===rolesOverlay&&Pe()});detailedRoleOverlay.addEventListener("click",e=>{e.target===detailedOverlay&&He()});V.addEventListener("click",je);mn.addEventListener("click",je);let te=0,oe=0,G=!1;p.addEventListener("mousedown",e=>{G=!0,te=e.clientX,oe=p.getBoundingClientRect().left,p.style.transition="none",document.body.style.userSelect="none"});document.addEventListener("mousemove",e=>{if(!G)return;const n=e.clientX-te;let t=oe+n;const o=-p.offsetWidth;t=Math.min(0,Math.max(o,t)),p.style.transform=`translateX(${t}px)`});document.addEventListener("mouseup",()=>{if(!G)return;G=!1,p.style.transition="transform 0.5s ease-in-out";const e=p.getBoundingClientRect().left,n=-p.offsetWidth/2;e>n?(p.classList.add("active"),p.style.transform="translateX(0)"):(p.classList.remove("active"),p.style.transform="translateX(-100%)"),document.body.style.userSelect=""});p.addEventListener("touchstart",e=>{G=!0,te=e.touches[0].clientX,oe=p.getBoundingClientRect().left,p.style.transition="none",document.body.style.userSelect="none"});document.addEventListener("touchmove",e=>{if(!G)return;const n=e.touches[0].clientX-te,t=-p.offsetWidth;let o=oe+n;o=Math.min(0,Math.max(t,o)),p.style.transform=`translateX(${o}px)`});document.addEventListener("touchend",()=>{if(!G)return;G=!1,p.style.transition="transform 0.5s ease-in-out";const e=p.getBoundingClientRect().left,n=-p.offsetWidth/2;e>n?(p.classList.add("active"),p.style.transform="translateX(0)"):(p.classList.remove("active"),p.style.transform="translateX(-100%)"),document.body.style.userSelect=""});F.addEventListener("click",Gn);window.addEventListener("resize",ee);window.addEventListener("beforeunload",async e=>{if(console.log("[DEBUG] [beforeunload] Page is about to unload. Attempting to leave room..."),_&&C&&R)try{R.rpc("remove_player_from_room",{p_room_id:_,p_player_id:C}),console.log("[DEBUG] [beforeunload] Sent leave room request.")}catch(n){console.error("[ERROR] [beforeunload] Error sending leave room request:",n)}});window.onload=Un;console.log("Script fully loaded and executed.");

import{createClient as Ze}from"https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))o(a);new MutationObserver(a=>{for(const i of a)if(i.type==="childList")for(const s of i.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&o(s)}).observe(document,{childList:!0,subtree:!0});function n(a){const i={};return a.integrity&&(i.integrity=a.integrity),a.referrerPolicy&&(i.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?i.credentials="include":a.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(a){if(a.ep)return;a.ep=!0;const i=n(a);fetch(a.href,i)}})();const Qe="https://uebjprtwmkqugjmcugdt.supabase.co",et="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlYmpwcnR3bWtxdWdqbWN1Z2R0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI4NDM2NzYsImV4cCI6MjA2ODQxOTY3Nn0.M0fz-1-Z32EtHnBDTtaqaMekUVdUjD49K9YoCgKCQ48";function tt(){try{const e=Ze(Qe,et);return console.log("[DEBUG] Supabase client initialized."),e}catch(e){throw console.error("[ERROR] Error initializing Supabase client:",e),e}}const Ge=document.getElementById("playerNameInput"),Le=document.getElementById("setPlayerNameBtn"),Ie=document.getElementById("player-name-section"),Ue=document.getElementById("room-selection-card"),xe=document.getElementById("my-room-view"),se=document.getElementById("createRoomTabBtn"),re=document.getElementById("joinRoomTabBtn"),we=document.getElementById("create-room-tab"),Ee=document.getElementById("join-room-tab"),nt=document.getElementById("newRoomNameInput"),ot=document.getElementById("createRoomBtn"),q=document.getElementById("roomIdInput"),at=document.getElementById("joinRoomBtn"),We=document.getElementById("leaveRoomBtn"),it=document.getElementById("room-info"),ge=document.getElementById("currentRoomId"),z=document.getElementById("playerList"),$=document.getElementById("messageBox"),ue=document.getElementById("sharedCounterDisplay"),he=document.getElementById("sharedRandomDisplay"),st=document.getElementById("incrementCounterBtn"),rt=document.getElementById("generateRandomBtn"),fe=document.getElementById("roomBackground"),be=document.getElementById("roleList"),lt=document.getElementById("viewAllRolesBtn"),Me=document.getElementById("rolesOverlay"),dt=document.getElementById("rolesOverlayCloseBtn"),$e=document.getElementById("rolesGridContainerOverlay"),Pe=document.getElementById("detailedRoleOverlay"),ct=document.getElementById("detailedOverlayCloseBtn"),Se=document.getElementById("detailedOverlayImage"),mt=document.getElementById("detailedOverlayRoleName"),gt=document.getElementById("detailedOverlayThaiName"),ut=document.getElementById("detailedOverlayDescription"),pe=document.getElementById("detailedOverlayGemsContainer"),_=document.getElementById("dynamicMainTitle"),X=document.getElementById("roomNameDisplay"),N=document.getElementById("renameRoomTitleBtn"),ht=document.getElementById("renameRoomModal"),Re=document.getElementById("renameRoomInput"),ft=document.getElementById("confirmRenameBtn"),pt=document.getElementById("cancelRenameBtn"),b=document.getElementById("rolePoolTab"),K=document.getElementById("rolePoolTabKnob"),yt=document.getElementById("rolePoolTabCloseBtn"),ye=document.getElementById("centerRolePoolDisplay"),L=document.getElementById("playerRolePileContainer"),Z=document.getElementById("myRoleTriggerArea"),Ce=document.getElementById("gem-counter-section"),A=document.getElementById("gemSettingsList"),Y=document.getElementById("addGemButton"),oe=document.getElementById("startGameBtn"),le=document.getElementById("addGemModal"),ve=document.getElementById("availableGemsList");document.getElementById("cancelAddGemBtn");const De=["https://i.imgur.com/hvBtKgM.jpeg","https://i.imgur.com/QIxZror.jpeg","https://i.imgur.com/4wQ8gYe.jpeg"],O="/images/gems/",I={Townfolks:{color:"#2ecc71",image:`${O}townfolks.jpg`},Werewolfs:{color:"#e74c3c",image:`${O}werewolves.jpg`},Specials:{color:"#f39c12",image:`${O}specials.jpg`},Vampires:{color:"#9b59b6",image:`${O}vampires.jpg`},Zombies:{color:"#55B4B4",image:`${O}zombies.jpg`},None:{color:"#95a5a6",image:`${O}none.jpg`}},He="/images/roles/",U=[{name:"Nobody","thai-name":"ไม่มีบทบาท",description:"Cannot be capable to do things","variant-count":5,gem:"None","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Narrator","thai-name":"ผู้บรรยาย",description:"Moderate the game","variant-count":1,gem:"None","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Villager","thai-name":"ชาวบ้าน",description:"Has no special night ability. Wins by accurately identifying and lynching Werewolves.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Seer","thai-name":"ผู้พยากรณ์",description:"Each night, chooses a player to learn their alignment which is Townfolks/Werewolfs.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"See through",action:"-select-any -show-rough-gem -o -night"}],conditions:void 0},{name:"Aura Seer","thai-name":"ผู้หยั่งรู้",description:"Each night, chooses a player to learn their role type which is Wolves/Townfolks/Specials.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"See through",action:"-select-any -show-gem -o -night"}],conditions:void 0},{name:"Apprentice Seer","thai-name":"ผู้พยากรณ์ฝึกหัด",description:"Apprentice Seer may be less powerful or gain power if the primary Seer dies.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-none-role-seer -none-role-restricted_seer -none-role-aura_seer",result:"-gain-role-seer"}]},{name:"Restricted Seer","thai-name":"ผู้พยากรณ์ต้องพันธนาการ",description:"Two times per game, at night, chooses a player to learn their alignment which is Townfolks/Werewolfs.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"See through",action:"-select-any -show-rough-gem -o -c2 -night"}],conditions:void 0},{name:"Prophet","thai-name":"ผู้เผยพระวจนะ",description:"Each night, chooses a player to learn their alignment which is Townfolks/Werewolfs. Have 1 time ability to reveal the role of a player.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"See through",action:"select-any -show-rough-gem -o -night"},{name:"Enlightened",action:"select-any -show-role -o -night -c1"}],conditions:void 0},{name:"Doctor","thai-name":"แพทย์",description:"One time per each game, chooses one player to revive from death.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Medication Effectiveness",action:"-select-status-dead -revive -c1 -o -night -before-gem-werewolfs"}],conditions:void 0},{name:"Nurse","thai-name":"นางพยาบาล",description:"The Nurse specifically gains the Doctor's ability if the Doctor dies.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-none-doctor",result:"-gain-role-doctor"}]},{name:"Bodyguard","thai-name":"บอดี้การ์ด",description:"Each night, chooses one player to protect; if that player is attacked, the Bodyguard may die in their place.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Full Protection",action:"-select-any -send-condition-being_protected<name: -this-name> -c1 -o -night -before-gem-werewolfs"}],conditions:[{condition:"-receive-kill",result:"-cancel -select-name-<name> -send-kill -c1"}]},{name:"Mason","thai-name":"ช่างก่ออิฐ",description:"Knows all other Masons, confirming their good alignment to each other.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Hunter","thai-name":"นายพราน",description:"If eliminated (lynched or killed by Werewolves), immediately chooses another player to eliminate.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Avenged",action:"-unusable -select-any -send-kill -c1"}],conditions:[{condition:"-receive-kill",result:"-trigger-ability-avenged"}]},{name:"Troublemaker","thai-name":"ตัวป่วน",description:"One time per game, at night, swaps the roles of two other players.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Troublemaker",action:"select-any-a2 -swap-role -o -c1 -night -late"}],conditions:void 0},{name:"Robber","thai-name":"โจร",description:"One time per game, at night, swaps their own role card with another player's role card and then views their new role.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Robbing",action:"-select-any -o -this -c1 -night -swap-role"}],conditions:void 0},{name:"Drunk","thai-name":"ขี้เมา",description:"Swaps a role card with a card from the center. The Drunk swaps their own without looking.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-night-d1",result:"-center -swap-role"}]},{name:"Bartender","thai-name":"บาร์เทนเดอร์",description:"One time per game, the Bartender swaps a central card with another player's.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Shaking",action:"-select-any -o -select-center-a1 -swap-role"}],conditions:void 0},{name:"Cupid","thai-name":"คิวปิด",description:'On the first night, chooses two players to be "lovers." If one lover dies, the other immediately dies as well.',"variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Love Knot",action:"-night-d1 -c1 -select-any-a2 -send-condition-love_knot<lover_name: -another-name>"}],conditions:[{name:"Love Knot",condition:"-receive-kill",result:"-select-name-lover_name -send-kill"}]},{name:"Witch","thai-name":"แม่มด",description:"Possesses two single-use potions: one to save a player from death, and one to kill any player.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Healing Potion",action:"-select-status-dead -c1 -night -late -o -send-revive"},{name:"Harming Potion",action:"-select-any -c1 -night -o -send-kill"}],conditions:void 0},{name:"Jailer","thai-name":"พัศดี",description:'Each night, chooses a player to "jail," preventing them from using their night ability and protecting them from nighttime attacks.',"variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Jails",action:"-select-any -night -o -send-condition-jailed<name>"}],conditions:[{name:"Jailed",condition:"-recieve-kill -night",result:"-cancel -c1 -t1"}]},{name:"Prince","thai-name":"เจ้าชาย",description:"If nominated for lynching, can reveal their role to automatically survive that lynching.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-receive-lynched",result:"-select-all -declare-role -cancel -c1 -o"}]},{name:"Mayor","thai-name":"นายกเทศบาล",description:"Their vote counts as two during the day.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-day",result:"-increased-vote_count-1"}],isPrimarilyDisabled:!0},{name:"Ghost","thai-name":"ผี",description:"Dies on the first night, then can communicate limited clues (e.g., one letter per night) from beyond the grave.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Clue",action:"-unusable -this -write-max-1 -show-all -c1"}],conditions:[{condition:"-night-d1 -c1",result:"-this -send-kill"},{condition:"-night-d2",result:"-this -trigger-ability-clue"}]},{name:"Lycanthrope","thai-name":"ไลแคน",description:"Appears as a Werewolf to the Seer but is actually a loyal Village team member.","variant-count":1,gem:"Townfolks","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Magician","thai-name":"นักมายากล",description:"Has one-time abilities to kill or revive a player at night.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Healing",action:"-night -c1 -select-status-dead -send-revive -this-remove-ability-harming -o"},{name:"Harming",action:"-night -c1 -select-any -send-kill -this-remove-ability-healing -o"}],conditions:void 0},{name:"Spellcaster","thai-name":"ผู้ร่ายมนต์",description:"At night, chooses a player who cannot speak during the following day phase.","variant-count":4,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Speakless",action:"-night -late -select-any -send-unspokable-l1 -o"}],conditions:void 0},{name:"Bodybuilder","thai-name":"นักกล้าม",description:"Survives one additional night attack from Werewolves.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-receive-kill -by-gem-werewolfs",result:"-cancel -c1"}]},{name:"Martyr","thai-name":"ผู้เห็นเหตุการณ์/มรณสักขี",description:"If someone is nominated for lynching, they can choose to die in their place to save the nominated player.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:[{name:"Die For You",action:"-select-<event> -cancel -o -this-send-kill"}],conditions:[{condition:"-event-lynched",result:"-this -trigger-ability-die_for_you<event: -event>"}],isPrimarilyDisabled:!0},{name:"Beholder","thai-name":"ผู้สังเกตการณ์",description:"Wakes up at night with seers to learn who the Seers are.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-event-wake-seer",result:"-this -send-wake -select-role-seer -select-role-restricted_seer -select-role-prophet -select-role-apprentice_seer -select-role-aure_seer -show-role-this"}]},{name:"Defender","thai-name":"ผู้ปกป้อง",description:"Can protect a player from Werewolf attacks, but typically cannot protect the same person two nights in a row.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Sheriff","thai-name":"นายอำเภอ",description:"During daytime, can force a vote on a player. The Sheriff can choose a Deputy.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Deputy","thai-name":"ปลัดอำเภอ",description:"The Deputy gains the Sheriff's abilities if the Sheriff dies.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:[{condition:"-none-sheriff",result:"-gain-role-sheriff"}]},{name:"Apothecary","thai-name":"เภสัชกร",description:"Is informed of who will be killed each night and has one potion to save and one potion to intensify the kill.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Cursed","thai-name":"ผู้ต้องสาป",description:"If targeted by a Werewolf for killing, they transform into a Werewolf instead of dying.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolfs",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Diseased","thai-name":"ผู้ติดเชื้อ",description:"If a Werewolf kills the Diseased player, the Werewolves cannot kill on the following night.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Spirit Medium","thai-name":"ผู้สื่อวิญญาณ",description:"Dead players can write notes to the Spirit Medium, providing clues to the living players.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Undertaker","thai-name":"สัปเหร่อ",description:"One time per game, the undertaker can dig a grave to see the role of a dead player.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Old Hag","thai-name":"มนุษย์ยายแก่",description:"At night, chooses a player who must leave the village the next day.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Old Man","thai-name":"ผู้สูงอายุ",description:"Will die within 3 days.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Necromancer","thai-name":"ผู้คืนชีพคนตาย",description:"Two times per game, copy an ability from a player, cannot copy from a player two times in row.","variant-count":1,gem:"Townfolks","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Dodger","thai-name":"ผู้หลบหลีก",description:"One time per game, can send the effect received toward a player at night.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Sponge","thai-name":"ฟองน้ำ",description:"During voting, if the Sponge receives the most points, the person with the next highest vote count is lynched.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Spellbinder","thai-name":"ผู้ลงมนต์",description:"Wakes up first and touches one player; that player does not wake up or use their ability during that night.","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Vigilante","thai-name":"ศาลเตี้ย",description:"Have one time ability to kill a player during the night, if killed a townfolk, the vigilante will die afterward from guilt","variant-count":1,gem:"Townfolks","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Werewolf","thai-name":"มนุษย์หมาป่า",description:"Each night, collectively choose one player to eliminate.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0,"default-amount":2},{name:"Alpha Werewolf","thai-name":"มนุษย์หมาป่าอัลฟ่า",description:"Each night, collectively choose one player to eliminate. Can turn a player who's not being a werewolf, to be one","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Dire Wolf","thai-name":"หมาป่าโลกันตร์",description:"Each night, along with the wolves, choose a player to eliminate. During the first night, choose a player to be your companion. You are eliminated if the player is eliminated.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Guardian Wolf","thai-name":"หมาป่าผู้พิทักษ์",description:"One time per game, a guardian wolf can choose a fellow werewolf to be protected from dying.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Minion","thai-name":"ลูกสมุน",description:"Wins with the Werewolves. Knows who the Werewolves are, but the Werewolves do not know the Minion.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Mystic Wolf","thai-name":"หมาป่าลึกลับ",description:"A Werewolf with a limited 2 times investigative ability, can tell the role of a non-werewolf characters.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Wolf Cub","thai-name":"ลูกหมาป่า",description:"A Werewolf with a limited 2 times investigative ability, can tell the role of a non-werewolf characters. The wolf cub cannot do killing votes, but in 3 days or all the wolves are killed, will become a werewolf","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Nightmare Werewolf","thai-name":"หมาป่าแห่งฝันร้าย",description:'Can impose a "nightmare" on a player, affecting their abilities to be affected on a random player instead',"variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Dream Wolf","thai-name":"หมาป่าผู้หลับฝัน",description:"A Werewolf who does not know the other Werewolves, but the other Werewolves know them.","variant-count":1,gem:"Werewolfs","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Squire","thai-name":"คหบดีชนบท",description:"Know who the Werewolves are, win if the werewolves win.","variant-count":1,gem:"Townfolks","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Voodoo Lady","thai-name":"หญิงสาวผู้ถือตุ๊กตาต้องสาป",description:"The Voodoo Lady curses a player; if that player nominates anyone for lynching, the cursed player dies.","variant-count":1,gem:"Townfolks","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Tanner","thai-name":"ผู้สิ้นหวัง",description:"Wins only if they are lynched by the villagers.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Tanner","thai-name":"ผู้สิ้นหวัง",description:"Wins only if they are lynched by the villagers.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Doppelgänger","thai-name":"ตัวแทน",description:"On the first night, chooses another player. If that player dies, the Doppelgänger takes on their role and abilities.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"The Fool","thai-name":"คนบ้า",description:"Wins only if they can manipulating the other villagers to be lynched to death.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Bookie","thai-name":"เจ้ามือแทงพนัน",description:"At night, guess who will be lynched on the next day, Wins by correctly betting on who will be lynched.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Sleuth","thai-name":"นักสืบ",description:"Can reveal themselves to guess roles; if successful, they win alone.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Pacifist","thai-name":"ผู้รักสันติ",description:"Can make another player's vote count as two, or prevent their own vote from counting.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Nostradamus","thai-name":"นอสตราดามุส",description:"One time per game, wakes up and can look at a set number of cards; the last card they look at determines their winning team.","variant-count":1,gem:"Specials","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Reaper","thai-name":"ยมทูต",description:"A standalone killer who wins if they are one of the last two players alive.","variant-count":1,gem:"Specials","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Cult Leader","thai-name":"ผู้นำลัทธิ",description:"Each night, can add a player to their cult. Wins if all remaining players are part of their cult.","variant-count":1,gem:"Specials","rough-gem":"Werewolfs",abilities:void 0,conditions:void 0},{name:"Vampire","thai-name":"แวมไพร์",description:"Belonging to a separate Vampire faction, during the night, can collectively vote a player to be cut and being converted within 1 days. Wins only if all the players are vampires","variant-count":1,gem:"Vampires","rough-gem":"Townfolks",abilities:void 0,conditions:void 0},{name:"Zombie","thai-name":"ซอมบี้",description:"Collectively vote a player to turn them into a new zombie. Wins only if all the players are zombies","variant-count":1,gem:"Zombies","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0},{name:"Infected","thai-name":"ผู้ติดเชื้อ",description:"Starting as a villager, when died will transform into a zombie.","variant-count":1,gem:"Zombies","rough-gem":"Townfolks",abilities:void 0,conditions:void 0,isPrimarilyDisabled:!0}];let ne=new Map;function l(e,t="info"){$.textContent=e,$.className="message-box",t==="success"?$.classList.add("bg-green-600","text-white"):t==="error"?$.classList.add("error"):$.classList.add("info"),$.classList.remove("hidden"),setTimeout(()=>{$.classList.add("hidden")},5e3)}function Ve(){return Math.floor(1e5+Math.random()*9e5).toString()}function vt(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=Math.random()*16|0,n=e=="x"?t:t&3|8;return n.toString(16)})}function wt(){return Math.floor(1e4+Math.random()*9e4).toString()}function ke(e){return U.find(t=>t.name===e)}function W(e){return e.toLowerCase().replace(/\s/g,"-")}function V(e,t=null){const n=W(e);if(t&&t.game_data&&t.game_data.role_image_map){const c=t.game_data.role_image_map[e];if(c)return c}const o=U.find(c=>W(c.name)===n);let a=1,i=e;if(o&&typeof o["variant-count"]=="number"&&o["variant-count"]>=1)a=o["variant-count"];else{console.warn(`[WARNING] Invalid or missing variant-count for role: ${e}. Falling back to "nobody".`);const c=U.find(g=>W(g.name)===W("Nobody"));if(c&&typeof c["variant-count"]=="number"&&c["variant-count"]>=1)a=c["variant-count"],i="Nobody";else return console.error('[ERROR] No valid variant-count found for "Nobody" role. Cannot generate image path.'),"https://placehold.co/180x180/ff0000/ffffff?text=Image+Error"}const s=Math.floor(Math.random()*a)+1,r=`${W(i)}-v-${s}.jpeg`;return`${He}${r}`}function Q(e,t){let n=0,o=0,a=0;return e.length===7&&(n=parseInt(e.slice(1,3),16),o=parseInt(e.slice(3,5),16),a=parseInt(e.slice(5,7),16)),`rgba(${n}, ${o}, ${a}, ${t})`}async function je(e){if(ne.has(e))return ne.get(e);try{const t=await fetch(e);if(!t.ok)throw console.warn(`[WARNING] Failed to fetch image from ${e}. Status: ${t.status}`),new Error(`HTTP error! status: ${t.status}`);const n=await t.blob();return new Promise((o,a)=>{const i=new FileReader;i.onloadend=()=>{const s=i.result;ne.set(e,s),o(s)},i.onerror=s=>{console.error(`[ERROR] FileReader error for ${e}:`,s),a(new Error(`FileReader error: ${s.message}`))},i.readAsDataURL(n)})}catch(t){console.error(`[ERROR] Error fetching or converting image ${e}:`,t);const n="https://placehold.co/180x180/ff0000/ffffff?text=Image+Error";return ne.set(e,n),n}}function ae(e){for(let t=e.length-1;t>0;t--){const n=Math.floor(Math.random()*(t+1));[e[t],e[n]]=[e[n],e[t]]}}function Je(e,t){const n=[];return e.forEach(o=>{if(!o.isDisabled){const a=ke(o.role);if(a)for(let i=0;i<o.amount;i++){const s=JSON.parse(JSON.stringify(a));s["chosen-image-url"]=t[a.name]||V(a.name,{game_data:{role_image_map:t}}),n.push(s)}}}),ae(n),n}async function ee(e,t){console.log(`[DEBUG] [fetchRoomData] Fetching data for room: ${t}`);try{const{data:n,error:o}=await e.from("Rooms").select("*").eq("id",t).single();if(o&&o.code==="PGRST116")return console.log(`[DEBUG] [fetchRoomData] Room ${t} not found.`),null;if(o)throw o;return console.log(`[DEBUG] [fetchRoomData] Received data for room ${t}:`,n),n}catch(n){return console.error("[ERROR] [fetchRoomData] Error fetching room data:",n),l(`Error fetching room data: ${n.message}`,"error"),null}}async function Fe(e,t,n,o,a){if(console.log("[DEBUG] [createRoom] Attempting to create room."),!o||!t||!n)return l("Please set your name first.","error"),null;const i=wt(),s=a.trim()||"WolfVille Village",r=U.map(m=>({role:m.name,amount:m["default-amount"]!==void 0?m["default-amount"]:1,isDisabled:m.isPrimarilyDisabled||!1}));console.log("[DEBUG] [createRoom] Initial Role Settings:",r);const c=[{gem:"Townfolks",count:3},{gem:"Specials",count:1},{gem:"Werewolfs",count:2}];console.log("[DEBUG] [createRoom] Initial Gem Included Settings:",c);const g={};U.forEach(m=>{const p=W(m.name),w=m["variant-count"]||1,k=Math.floor(Math.random()*w)+1;g[m.name]=`${He}${p}-v-${k}.jpeg`}),console.log("[DEBUG] [createRoom] Generated Role Image Map:",g);const u=Je(r,g);console.log("[DEBUG] [createRoom] Initial Center Role Pool:",u);const f=ke("Nobody"),d=f?[{...JSON.parse(JSON.stringify(f)),"chosen-image-url":g[f.name]||V(f.name,{game_data:{role_image_map:g}})}]:[],h={name:t,uid:n,"local-id":o,status:"Alive","rendered-image":void 0,roles:d},y=De[Math.floor(Math.random()*De.length)];try{if(await ee(e,i))return l(`Room ${i} already exists. Trying another ID.`,"info"),Fe(e,t,n,o,a);const{data:p,error:w}=await e.from("Rooms").insert([{id:i,host_id:o,players:[h],game_data:{counter:0,randomValue:"N/A",lastUpdatedBy:t,background_image_url:y,roomName:s,role_settings:r,center_role_pool:u,gem_included_settings:c,role_image_map:g}}]);if(w)throw w;return l(`Room ${i} created successfully!`,"success"),console.log(`[DEBUG] [createRoom] Room ${i} created.`),i}catch(m){return console.error("[ERROR] [createRoom] Error creating room:",m),l(`Error creating room: ${m.message}`,"error"),null}}async function Et(e,t,n,o,a,i){if(console.log("[DEBUG] [joinRoom] Attempting to join room."),!o||!t||!n)return l("Please set your name first.","error"),!1;const s=a.trim();if(!s)return l("Please enter a Room ID.","error"),!1;const r=ke("Nobody"),c=r?[{...JSON.parse(JSON.stringify(r)),"chosen-image-url":V(r.name,i)}]:[],g={name:t,uid:n,"local-id":o,status:"Alive","rendered-image":void 0,roles:c};try{if(await ee(e,s)){const{data:f,error:d}=await e.rpc("add_player_to_room",{p_room_id:s,p_player_data:g});if(d)if(d.message.includes("already in room"))l(`You are already in room ${s}.`,"info");else throw d;else l(`Joined room ${s} successfully!`,"success");return console.log(`[DEBUG] [joinRoom] Room ${s} joined.`),!0}else return l(`Room ${s} does not exist.`,"error"),console.log(`[DEBUG] [joinRoom] Room ${s} does not exist.`),!1}catch(u){return console.error("[ERROR] [joinRoom] Error joining room:",u),l(`Error joining room: ${u.message}`,"error"),!1}}async function bt(e,t,n,o,a){if(console.log("[DEBUG] [leaveRoom] Attempting to leave room."),!t||!o){l("You are not in a room.","info");return}const i=t;try{const s=await ee(e,i);if(!s){console.warn(`[DEBUG] [leaveRoom] Room ${i} not found when trying to leave.`);return}if(a&&s.players&&s.players.length>1){const g=s.players.filter(u=>u["local-id"]!==o);if(g.length>0){const u=g[0];console.log(`[DEBUG] [leaveRoom] Promoting new host: ${u.name} (Local ID: ${u["local-id"]})`);const{error:f}=await e.rpc("promote_new_host",{p_room_id:i,p_new_host_id:u["local-id"]});f?(console.error("[ERROR] [leaveRoom] Error promoting new host:",f),l(`Error promoting new host: ${f.message}`,"error")):l(`You left the room. ${u.name} is the new host.`,"info")}}else a&&s.players.length<=1?l("You left the room. The room might be dissolved as you were the last player.","info"):l(`You left room ${i}.`,"success");const{data:r,error:c}=await e.rpc("remove_player_from_room",{p_room_id:i,p_player_id:n});if(c)throw c}catch(s){console.error("[ERROR] [leaveRoom] Error leaving room:",s),l(`Error leaving room: ${s.message}`,"error")}}async function M(e,t,n,o,a){if(!t||!o){l("Only the host can kick players.","error");return}if(a===n){l("You cannot kick yourself.","error");return}console.log(`[DEBUG] [kickPlayer] Attempting to kick player ${a} from room ${t}`);try{const{data:i,error:s}=await e.rpc("remove_player_from_room",{p_room_id:t,p_player_id:a});if(s)throw s;l(`Player ${a}... kicked successfully.`,"success")}catch(i){console.error("[ERROR] [kickPlayer] Error kicking player:",i),l(`Error kicking player: ${i.message}`,"error")}}function Rt(e,t){return!e||!t?(l("Only the host can rename the room.","error"),!1):(console.log("[DEBUG] [renameRoomTitle] Showing rename modal."),!0)}async function Ct(e,t,n,o){const a=o.trim();if(a===null||a==="")return l("Room name cannot be empty.","info"),!1;try{if(!n)return l("Room not found for renaming.","error"),!1;const{data:i,error:s}=await e.from("Rooms").update({game_data:{...n.game_data,roomName:a}}).eq("id",t);if(s)throw s;return l(`Room title updated to "${a}"!`,"success"),console.log(`[DEBUG] [confirmRenameRoom] Room renamed to: ${a}`),!0}catch(i){return console.error("[ERROR] [confirmRenameRoom] Error renaming room title:",i),l(`Error renaming room title: ${i.message}`,"error"),!1}}async function kt(e,t,n,o,a){var i;if(!t||!n){l("You must be in a room to interact with the game state.","error");return}try{if(!a){l("Room not found for counter update.","error");return}const r=(((i=a.game_data)==null?void 0:i.counter)||0)+1,{data:c,error:g}=await e.from("Rooms").update({game_data:{...a.game_data,counter:r,lastUpdatedBy:o}}).eq("id",t);if(g)throw g;l("Counter incremented!","success"),console.log(`[DEBUG] [incrementCounter] Counter incremented to: ${r}`)}catch(s){console.error("[ERROR] [incrementCounter] Error incrementing counter:",s),l(`Error incrementing counter: ${s.message}`,"error")}}async function Bt(e,t,n,o,a){if(!t||!n){l("You must be in a room to interact with the game state.","error");return}try{if(!a){l("Room not found for random value update.","error");return}const i=Math.floor(Math.random()*1e4),{data:s,error:r}=await e.from("Rooms").update({game_data:{...a.game_data,randomValue:i,lastUpdatedBy:o}}).eq("id",t);if(r)throw r;l(`Random value generated: ${i}!`,"success"),console.log(`[DEBUG] [generateRandomValue] Random value generated: ${i}`)}catch(i){console.error("[ERROR] [generateRandomValue] Error generating random value:",i),l(`Error generating random value: ${i.message}`,"error")}}async function te(e,t,n,o,a){var i;if(!t){l("Not in a room to update game data.","error");return}try{if(!n){l("Room not found for updating game data.","error");return}const s=Je(o,((i=n.game_data)==null?void 0:i.role_image_map)||{}),r={...n.game_data,role_settings:o,center_role_pool:s,gem_included_settings:a};console.log("[DEBUG] Sending updated game_data to DB:",r);const{data:c,error:g}=await e.from("Rooms").update({game_data:r}).eq("id",t);if(g)throw g;console.log("[DEBUG] Game data (role settings, center_role_pool, gem_included_settings) updated in DB successfully.")}catch(s){console.error("[ERROR] Error updating game data in DB:",s),l(`Error updating game data: ${s.message}`,"error")}}async function Oe(e,t,n,o,a){if(!n||!n.game_data||!n.game_data.role_settings){l("Room data not available to update role amount.","error");return}const i=[...n.game_data.role_settings],s=i.find(r=>r.role===o);if(s){const r=Math.max(0,s.amount+a);s.amount!==r&&(s.amount=r,await te(e,t,n,i,n.game_data.gem_included_settings),console.log(`[DEBUG] Role ${o} amount changed to ${r}.`))}else l(`Role setting for ${o} not found.`,"error")}async function Tt(e,t,n,o){const a=U.find(r=>r.name===o);if(a&&a.gem==="None"){l('Roles with gem "None" cannot be disabled/enabled.',"info");return}if(!n||!n.game_data||!n.game_data.role_settings){l("Room data not available to toggle role disable status.","error");return}const i=[...n.game_data.role_settings],s=i.find(r=>r.role===o);s?(s.isDisabled=!s.isDisabled,await te(e,t,n,i,n.game_data.gem_included_settings),console.log(`[DEBUG] Role ${o} disabled status toggled to ${s.isDisabled}.`)):l(`Role setting for ${o} not found.`,"error")}async function Ae(e,t,n,o,a){if(!n||!n.game_data||!n.game_data.gem_included_settings){l("Room data not available to update gem count.","error");return}const i=[...n.game_data.gem_included_settings],s=i.find(r=>r.gem===o);if(s){const r=Math.max(0,s.count+a);s.count!==r&&(s.count=r,await te(e,t,n,n.game_data.role_settings,i),console.log(`[DEBUG] Gem ${o} count changed to ${r}.`))}else l(`Gem setting for ${o} not found.`,"error")}async function _t(e,t,n,o){if(!n||!n.game_data||!n.game_data.gem_included_settings){l("Room data not available to remove gem.","error");return}const a=n.game_data.gem_included_settings.filter(i=>i.gem!==o);a.length!==n.game_data.gem_included_settings.length?(await te(e,t,n,n.game_data.role_settings,a),l(`Removed ${o} from roles.`,"success"),console.log(`[DEBUG] Gem ${o} removed from settings.`)):l(`Gem ${o} not found in settings.`,"info")}async function Nt(e,t,n,o){if(!n||!n.game_data||!n.game_data.gem_included_settings){l("Room data not available to add gem.","error");return}const a=[...n.game_data.gem_included_settings];return a.find(s=>s.gem===o)?(l(`${o} is already in the list.`,"info"),!1):(a.push({gem:o,count:1}),await te(e,t,n,n.game_data.role_settings,a),l(`Added ${o} to roles.`,"success"),!0)}async function Gt(e,t,n,o){var u,f;if(!t||!n){l("Only the host can start the game.","error");return}if(!o||!o.players||o.players.length===0){l("Cannot start game: No players in the room.","error");return}const a=[...o.players],i=((u=o.game_data)==null?void 0:u.gem_included_settings)||[],s=((f=o.game_data)==null?void 0:f.role_image_map)||{};let r=[];if(i.forEach(d=>{const h=d.gem,y=d.count,m=U.filter(p=>p.gem===h&&!p.isPrimarilyDisabled);for(let p=0;p<y;p++)if(m.length>0){const w=Math.floor(Math.random()*m.length),k=m[w],D=JSON.parse(JSON.stringify(k));D["chosen-image-url"]=s[k.name]||V(k.name,o),r.push(D)}}),r.length<a.length){l(`Not enough roles configured! Need ${a.length} roles, but only have ${r.length}. Adjust gem counts.`,"error");return}r.length>a.length&&(ae(r),r=r.slice(0,a.length)),ae(r),ae(a);const c=a.map((d,h)=>{const y=r[h];return y?{...d,roles:[y]}:d}),g=[];try{const{data:d,error:h}=await e.from("Rooms").update({players:c,game_data:{...o.game_data,center_role_pool:g}}).eq("id",t);if(h)throw h;l("Game started! Roles assigned.","success"),console.log("[DEBUG] Game started, roles assigned and center pool cleared.")}catch(d){console.error("[ERROR] Error starting game:",d),l(`Error starting game: ${d.message}`,"error")}}function Lt(e,t){Me.classList.add("active"),t(e),console.log("[DEBUG] Showing roles overlay.")}function ze(){Me.classList.remove("active"),console.log("[DEBUG] Hiding roles overlay.")}async function Ye(e,t){console.log(`[DEBUG] Showing detailed overlay for role: ${e.name}`);const n=e["chosen-image-url"]||V(e.name,t);Se.src=await je(n),Se.alt=`Image for ${e.name}`,mt.textContent=e.name,gt.textContent=e["thai-name"],ut.textContent=e.description,pe.innerHTML="";const o=document.createElement("span");o.className="capsule-tag rough-gem-tag",o.textContent=e["rough-gem"],pe.appendChild(o);const a=document.createElement("span");a.className=`capsule-tag gem-tag gem-${e.gem.replace(/\s/g,"")}`,a.textContent=e.gem,pe.appendChild(a),Pe.classList.add("active"),console.log("[DEBUG] Detailed overlay activated.")}function Xe(){Pe.classList.remove("active"),console.log("[DEBUG] Detailed overlay hidden.")}function It(e,t){if(!e||!e.game_data||!e.game_data.gem_included_settings)return;ve.innerHTML="";const n=e.game_data.gem_included_settings.map(i=>i.gem),a=Object.keys(I).filter(i=>i!=="None").filter(i=>!n.includes(i));a.length===0?ve.innerHTML='<p class="text-center text-gray-600">All available categories are already added.</p>':a.forEach(i=>{const s=I[i],r=document.createElement("div");r.className="available-gem-item",r.dataset.gemName=i,r.innerHTML=`
                <img src="${s.image}" alt="${i}" class="available-gem-item-image">
                <span class="available-gem-item-name">${i}</span>
            `,r.addEventListener("click",async()=>{await t(i)&&Be()}),ve.appendChild(r)}),le.classList.add("active"),console.log("[DEBUG] Showing add gem modal.")}function Be(){le.classList.remove("active"),console.log("[DEBUG] Hiding add gem modal.")}function Te(){ht.classList.remove("active"),Re.value="",console.log("[DEBUG] [hideRenameRoomModal] Rename modal hidden.")}function Ut(){Te(),console.log("[DEBUG] [cancelRenameRoom] Rename modal cancelled.")}function xt(){Re.value=X.textContent,Re.focus()}let P=!1,ie=!1;function j(e,t,n,o,a,i){var g,u,f;console.log("[DEBUG] [updateRoomUI] Received roomData:",e);const s=t===(e==null?void 0:e.host_id);if(!e){z.innerHTML="",ue.textContent="Counter: 0",he.textContent="N/A",ge.textContent="",fe.style.backgroundImage="none",X.textContent="WolfVille Village",_.classList.remove("room-title-sign"),N.classList.add("hidden"),console.log("[DEBUG] [updateRoomUI] Room data is null, clearing UI."),a=[],i([],[]),K.classList.add("hidden"),b.classList.remove("active"),ie=!1,Z.classList.add("hidden"),Ce.classList.add("hidden"),oe.classList.add("hidden");return}it.classList.remove("hidden"),We.classList.remove("hidden"),K.classList.remove("hidden"),Z.classList.remove("hidden"),Ce.classList.remove("hidden"),console.log(`[DEBUG] [updateRoomUI] Current user (Local ID: ${t}, Short ID: ${n}) is host: ${s}`),e.game_data&&e.game_data.roomName?(X.textContent=e.game_data.roomName,console.log(`[DEBUG] [updateRoomUI] Setting room name display to: ${e.game_data.roomName}`)):(X.textContent="WolfVille Village",console.log("[DEBUG] [updateRoomUI] Setting room name display to default: WolfVille Village")),s?(N.classList.remove("hidden"),console.log("[DEBUG] [updateRoomUI] Rename button shown (isHost)."),oe.classList.remove("hidden")):(N.classList.add("hidden"),console.log("[DEBUG] [updateRoomUI] Rename button hidden (not host)."),oe.classList.add("hidden")),_.contains(N)||(_.appendChild(N),console.log("[DEBUG] [updateRoomUI] Rename button appended to dynamicMainTitle.")),e.id?(ge.textContent=e.id,console.log("[DEBUG] [updateRoomUI] Displaying Room ID:",e.id)):(ge.textContent="N/A",console.warn("[DEBUG] [updateRoomUI] roomData.id is missing or null. Cannot display Room ID.")),e.game_data&&e.game_data.background_image_url?(fe.style.backgroundImage=`url('${e.game_data.background_image_url}')`,console.log("[DEBUG] [updateRoomUI] Setting background image:",e.game_data.background_image_url)):(fe.style.backgroundImage="none",console.warn("[DEBUG] [updateRoomUI] No background image URL found in roomData.game_data."));const r=e.players||[];console.log("[DEBUG] [updateRoomUI] Players in room:",r),z.innerHTML="",console.log("[DEBUG] [updateRoomUI] Player list cleared.");let c=null;if(r.length>0)r.forEach(d=>{d["local-id"]===t&&(c=d);const h=document.createElement("div");h.className="player-card",d.uid===n&&(h.classList.add("current-player"),console.log(`[DEBUG] [updateRoomUI] Highlighting current player: ${d.name}`));const y=d["local-id"]===e.host_id?"host-tag":"player-tag",m=d["local-id"]===e.host_id?"Host":"Player";if(h.innerHTML=`
                <div class="player-card-name">${d.name}</div>
                <div class="player-tags-container">
                    <span class="player-role-tag ${y}">${m}</span>
                    <span class="player-status-tag status-${d.status||"Alive"}">${d.status||"Alive"}</span>
                </div>
            `,s&&d.uid!==n){const p=document.createElement("button");p.className="kick-player-btn",p.textContent="x",p.title=`Kick ${d.name} (${d.uid})`,p.dataset.playerId=d.uid,p.addEventListener("click",()=>o(d.uid)),h.appendChild(p),console.log(`[DEBUG] [updateRoomUI] Added kick button for ${d.name}.`)}z.appendChild(h),console.log(`[DEBUG] [updateRoomUI] Added player card for: ${d.name}`)});else{const d=document.createElement("div");d.textContent="No players in this room yet.",d.className="text-center text-gray-400 p-4",z.appendChild(d),console.log('[DEBUG] [updateRoomUI] No players found, displaying "No players" message.')}if(e.game_data&&typeof e.game_data.counter=="number"?(ue.textContent=`Counter: ${e.game_data.counter}`,console.log(`[DEBUG] [updateRoomUI] Counter updated to: ${e.game_data.counter}`)):(ue.textContent="Counter: 0",console.log("[DEBUG] [updateRoomUI] Counter reset to 0.")),e.game_data&&typeof e.game_data.randomValue<"u"?(he.textContent=`Random Value: ${e.game_data.randomValue}`,console.log(`[DEBUG] [updateRoomUI] Random Value updated to: ${e.game_data.randomValue}`)):(he.textContent="N/A",console.log("[DEBUG] [updateRoomUI] Random Value reset to N/A.")),$t(((g=e.game_data)==null?void 0:g.role_settings)||[]),console.log("[DEBUG] [updateRoomUI] Called renderRoleList."),Wt(((u=e.game_data)==null?void 0:u.gem_included_settings)||[],s),console.log("[DEBUG] [updateRoomUI] Called renderGemSettings."),c){const d=c.roles||[];JSON.stringify(d)!==JSON.stringify(a)&&(console.log("[DEBUG] Player roles changed. Updating my role cards."),i(a,d,e),a.splice(0,a.length,...d))}else a.length>0&&(console.log("[DEBUG] Current player not found in room. Clearing my role cards."),i([],[],e),a.length=0);Dt(((f=e.game_data)==null?void 0:f.center_role_pool)||[],e)}async function _e(e,t,n,o=!1){const a=t["chosen-image-url"]||V(t.name,n);try{const i=await je(a);e.src=i,e.alt=`Image for ${t.name}`,console.log(`[DEBUG] Displaying static image for ${t.name}: ${a}`)}catch(i){console.error(`[ERROR] Failed to load static image for ${t.name} from ${a}:`,i),e.src=o?"https://placehold.co/180x180/ff0000/ffffff?text=Error":"https://placehold.co/100x100/ff0000/ffffff?text=Error",e.alt=`Error loading image for ${t.name}`}}function $t(e,t,n){console.log("[DEBUG] [renderRoleList] Starting role list rendering."),be.innerHTML="",console.log("[DEBUG] [renderRoleList] Cleared roleListDiv content."),U.forEach(o=>{const a=e.find(D=>D.role===o.name)||{role:o.name,amount:o["default-amount"]!==void 0?o["default-amount"]:1,isDisabled:o.isPrimarilyDisabled||!1},i=document.createElement("div");i.className=`role-item gem-${o.gem.replace(/\s/g,"")}`,a.isDisabled&&i.classList.add("disabled"),i.dataset.roleName=o.name;const s=document.createElement("div");s.className="role-text-content";const r=document.createElement("div");r.className="role-name",r.textContent=o.name;const c=document.createElement("div");c.className="role-thai-name",c.textContent=o["thai-name"];const g=document.createElement("div");g.className="role-description";const u=document.createElement("p");u.className="description-text",u.textContent=o.description,g.appendChild(u),s.appendChild(r),s.appendChild(c),s.appendChild(g),i.appendChild(s);const f=document.createElement("div");f.className="role-item-capsules-container";const d=document.createElement("span");d.className="capsule-tag rough-gem-tag",d.textContent=o["rough-gem"],f.appendChild(d);const h=document.createElement("span");h.className=`capsule-tag gem-tag gem-${o.gem.replace(/\s/g,"")}`,h.textContent=o.gem,f.appendChild(h),i.appendChild(f);const y=document.createElement("div");y.className="role-controls";const m=document.createElement("button");m.className="disable-role-button",m.textContent=a.isDisabled?"✖":"✔",m.title=a.isDisabled?"Enable Role":"Disable Role",m.dataset.roleName=o.name,m.dataset.action="toggleDisable",m.style.backgroundColor="#756d7a",m.disabled=o.gem==="None",y.appendChild(m);const p=document.createElement("button");p.className="role-control-button minus",p.textContent="-",p.dataset.roleName=o.name,p.dataset.action="decrement",p.disabled=a.amount===0,p.style.backgroundColor="#756d7a",y.appendChild(p);const w=document.createElement("span");w.className="role-pooling-count",w.textContent=a.amount,w.style.backgroundColor="rgba(255, 255, 255, 0.7)",w.style.border="1px solid rgba(0, 0, 0, 0.1)",w.style.borderRadius="0.5rem",w.style.padding="0 0.25rem",w.style.backdropFilter="blur(2px)",w.style.webkitBackdropFilter="blur(2px)",y.appendChild(w);const k=document.createElement("button");k.className="role-control-button plus",k.textContent="+",k.dataset.roleName=o.name,k.dataset.action="increment",k.style.backgroundColor="#756d7a",y.appendChild(k),i.appendChild(y),be.appendChild(i),console.log(`[DEBUG] [renderRoleList] Added role item for: ${o.name}`)}),console.log("[DEBUG] [renderRoleList] Finished role list rendering.")}function St(e){console.log("[DEBUG] [renderAllRoleCardsToOverlay] Starting overlay role card rendering."),$e.innerHTML="",console.log("[DEBUG] [renderAllRoleCardsToOverlay] Cleared rolesGridContainerOverlay content."),U.forEach(t=>{const n=document.createElement("div");n.className="role-card-overlay",n.dataset.roleName=t.name;const o=I[t.gem]||I.None,a=document.createElement("div");a.className="role-header-band-overlay",a.textContent=t.name.toUpperCase(),n.appendChild(a);const i=document.createElement("img");i.className="gem-icon-overlay",i.src=o.image,i.alt=`${t.gem} icon`,n.appendChild(i);const s=document.createElement("div");s.className="role-name-band-overlay",s.style.backgroundColor=Q(o.color,.7);const r=document.createElement("div");r.className="band-text-wrapper";const c=document.createElement("span");c.className="band-english-name",c.textContent=t.name.toUpperCase(),r.appendChild(c);const g=document.createElement("span");g.className="band-thai-name",g.textContent=t["thai-name"],r.appendChild(g),s.appendChild(r),n.appendChild(s);const u=document.createElement("div");u.className="new-capsules-container-overlay";const f=document.createElement("span");f.className="capsule-tag rough-gem-tag",f.textContent=t["rough-gem"],u.appendChild(f);const d=document.createElement("span");d.className=`capsule-tag gem-tag gem-${t.gem.replace(/\s/g,"")}`,d.textContent=t.gem,u.appendChild(d),n.appendChild(u);const h=document.createElement("div");h.className="role-image-container-overlay";const y=document.createElement("img");y.className="role-image-overlay",_e(y,t,e,!0),h.appendChild(y),n.appendChild(h);const m=document.createElement("div");m.className="role-content-area-overlay";const p=document.createElement("div");p.className="role-description-overlay";const w=document.createElement("p");w.className="description-text-overlay",w.textContent=t.description,p.appendChild(w),m.appendChild(p),n.appendChild(m),n.addEventListener("click",()=>Ye(t,e)),$e.appendChild(n),console.log(`[DEBUG] [renderAllRoleCardsToOverlay] Added overlay role card for: ${t.name}`)}),console.log("[DEBUG] [renderAllRoleCardsToOverlay] Finished overlay role card rendering.")}function Dt(e,t){if(console.log("[DEBUG] [renderCenterRolePool] Starting center role pool rendering."),ye.innerHTML="",e.length===0){ye.textContent="No role cards in the center pool.";return}e.forEach(n=>{const o=document.createElement("div");o.className="center-pool-card",o.style.margin="0.5rem",o.style.transform=`rotate(${Math.random()*6-3}deg)`;const a=I[n.gem]||I.None,i=document.createElement("div");i.className="role-header-band-overlay",i.textContent=n.name.toUpperCase(),o.appendChild(i);const s=document.createElement("img");s.className="gem-icon-overlay",s.src=a.image,s.alt=`${n.gem} icon`,o.appendChild(s);const r=document.createElement("div");r.className="role-name-band-overlay",r.style.backgroundColor=Q(a.color,.7);const c=document.createElement("div");c.className="band-text-wrapper";const g=document.createElement("span");g.className="band-english-name",g.textContent=n.name.toUpperCase();const u=document.createElement("span");u.className="band-thai-name",u.textContent=n["thai-name"],c.appendChild(g),c.appendChild(u),r.appendChild(c),o.appendChild(r);const f=document.createElement("div");f.className="new-capsules-container-overlay";const d=document.createElement("span");d.className="capsule-tag rough-gem-tag",d.textContent=n["rough-gem"],f.appendChild(d);const h=document.createElement("span");h.className=`capsule-tag gem-tag gem-${n.gem.replace(/\s/g,"")}`,h.textContent=n.gem,f.appendChild(h),o.appendChild(f);const y=document.createElement("div");y.className="role-image-container-overlay";const m=document.createElement("img");m.className="role-image-overlay",_e(m,n,t,!0),y.appendChild(m),o.appendChild(y);const p=document.createElement("div");p.className="role-content-area-overlay";const w=document.createElement("div");w.className="role-description-overlay";const k=document.createElement("p");k.className="description-text-overlay",k.textContent=n.description,w.appendChild(k),p.appendChild(w),o.appendChild(p),ye.appendChild(o)}),console.log("[DEBUG] [renderCenterRolePool] Finished center role pool rendering.")}async function J(e,t,n){console.log("[DEBUG] [renderPlayerRoleCards] Old Roles:",e,"New Roles:",t),L.style.pointerEvents="none";const o=t.filter(a=>!e.some(i=>JSON.stringify(i)===JSON.stringify(a)));if(L.innerHTML="",t.length===0){L.innerHTML='<p class="text-center text-gray-400 p-4">No roles assigned yet.</p>',L.style.pointerEvents="none";return}for(const a of t){const i=await Ot(a,n);L.appendChild(i),o.some(s=>JSON.stringify(s)===JSON.stringify(a))&&(i.classList.add("new-role-animation"),setTimeout(()=>{i.classList.remove("new-role-animation"),de()},500))}de(),setTimeout(()=>{L.style.pointerEvents=P?"auto":"none"},600)}async function Ot(e,t){const n=document.createElement("div");n.className="player-role-card",n.dataset.roleName=e.name;const o=I[e.gem]||I.None,a=document.createElement("div");a.className="role-header-band-overlay",a.textContent=e.name.toUpperCase(),n.appendChild(a);const i=document.createElement("img");i.className="gem-icon-overlay",i.src=o.image,i.alt=`${e.gem} icon`,n.appendChild(i);const s=document.createElement("div");s.className="role-name-band-overlay",s.style.backgroundColor=Q(o.color,.7);const r=document.createElement("div");r.className="band-text-wrapper";const c=document.createElement("span");c.className="band-english-name",c.textContent=e.name.toUpperCase();const g=document.createElement("span");g.className="band-thai-name",g.textContent=e["thai-name"],r.appendChild(c),r.appendChild(g),s.appendChild(r),n.appendChild(s);const u=document.createElement("div");u.className="new-capsules-container-overlay";const f=document.createElement("span");f.className="capsule-tag rough-gem-tag",f.textContent=e["rough-gem"],u.appendChild(f);const d=document.createElement("span");d.className=`capsule-tag gem-tag gem-${e.gem.replace(/\s/g,"")}`,d.textContent=e.gem,u.appendChild(d),n.appendChild(u);const h=document.createElement("div");h.className="role-image-container-overlay";const y=document.createElement("img");y.className="role-image-overlay",await _e(y,e,t,!0),h.appendChild(y),n.appendChild(h);const m=document.createElement("div");m.className="role-content-area-overlay";const p=document.createElement("div");p.className="role-description-overlay";const w=document.createElement("p");return w.className="description-text-overlay",w.textContent=e.description,p.appendChild(w),m.appendChild(p),n.appendChild(m),n.addEventListener("click",k=>{P&&(k.stopPropagation(),Ye(e,t))}),n}function de(){const e=Array.from(L.children),t=220,n=320,o=50,a=window.innerWidth,i=window.innerHeight;e.forEach((s,r)=>{if(s.style.transition="transform 0.5s ease-out, top 0.5s ease-out, left 0.5s ease-out, opacity 0.5s ease-out",!P)s.style.top=`${i-o+r*2}px`,s.style.left=`${a/2-t/2+r*2}px`,s.style.transform=`rotate(${Math.random()*6-3}deg) scale(1)`,s.style.opacity="1",s.style.zIndex=950+r;else{const c=e.length,g=a*.8,u=30,f=t*.7;let d=(g-t)/Math.max(1,c-1);d=Math.max(u,Math.min(f,d));const h=(c-1)*d+t,y=a/2-h/2,m=i/2-n/2,p=20,w=15,k=c>1?w*2/(c-1):0,D=c>1?-w:0;s.style.left=`${y+r*d}px`,s.style.top=`${m+(r%2===0?0:p)}px`,s.style.transform=`rotate(${D+r*k}deg) scale(1)`,s.style.opacity="1",s.style.zIndex=970+r}})}function At(){P=!P,L.classList.toggle("active",P),de()}function Wt(e,t,n){if(console.log("[DEBUG] [renderGemSettings] Starting gem settings rendering. Received settings:",e),A.innerHTML="",e.length===0){const o=document.createElement("p");o.className="text-center text-gray-400 p-4",o.textContent="No gem categories added yet.",A.appendChild(o)}else e.forEach(o=>{const a=o.gem,i=o.count,s=I[a];if(!s){console.warn(`[WARNING] Gem data not found for ${a}. Skipping.`);return}const r=document.createElement("div");r.className="gem-setting-item",r.dataset.gemName=a;const c=document.createElement("div");c.className="gem-setting-image-area",c.style.backgroundColor=Q(s.color,.4);const g=document.createElement("img");g.className="gem-setting-image",g.src=s.image,g.alt=`${a} icon`,c.appendChild(g),r.appendChild(c);const u=document.createElement("button");u.className="gem-setting-close-btn",u.textContent="✖",u.title=`Remove ${a}`,u.dataset.gemName=a,u.dataset.action="removeGem",u.disabled=!t,r.appendChild(u);const f=document.createElement("div");f.className="gem-setting-separator",r.appendChild(f);const d=document.createElement("div");d.className="gem-setting-counter-area",d.style.backgroundColor=Q(s.color,.3);const h=document.createElement("button");h.className="gem-setting-button",h.textContent="-",h.dataset.gemName=a,h.dataset.action="decrementGem",h.disabled=i===0||!t,d.appendChild(h);const y=document.createElement("span");y.className="gem-setting-count",y.textContent=i,d.appendChild(y);const m=document.createElement("button");m.className="gem-setting-button",m.textContent="+",m.dataset.gemName=a,m.dataset.action="incrementGem",m.disabled=!t,d.appendChild(m),r.appendChild(d),A.appendChild(r)});t?Y.classList.remove("hidden"):Y.classList.add("hidden"),A.contains(Y)||A.appendChild(Y),console.log("[DEBUG] [renderGemSettings] Finished gem settings rendering.")}function qe(){ie=!ie,ie?(b.classList.add("active"),b.style.transform="translateX(0)"):(b.classList.remove("active"),b.style.transform="translateX(-100%)")}function S(e){console.log(`[DEBUG] [showView] Called with: ${e}`),Ie.classList.add("hidden"),Ue.classList.add("hidden"),xe.classList.add("hidden"),se.classList.remove("active"),re.classList.remove("active"),we.classList.add("hidden"),Ee.classList.add("hidden"),q.value="",b.classList.remove("active"),K.classList.add("hidden"),L.innerHTML="",L.classList.remove("active"),Z.classList.add("hidden"),Ce.classList.add("hidden"),oe.classList.add("hidden"),e==="player-name"?(_.classList.add("hidden"),Ie.classList.remove("hidden"),N.classList.add("hidden")):e==="room-selection"?(_.classList.remove("hidden"),X.textContent="WolfVille Village",_.classList.remove("room-title-sign"),_.contains(N)&&_.removeChild(N),N.classList.add("hidden"),Ue.classList.remove("hidden"),Ne("create-room")):e==="my-room"?(_.classList.remove("hidden"),_.classList.add("room-title-sign"),_.contains(N)||_.appendChild(N),xe.classList.remove("hidden"),K.classList.remove("hidden"),Z.classList.remove("hidden")):console.warn(`[DEBUG] [showView] Unknown view requested: ${e}`),console.log(`[DEBUG] [showView] Displaying: ${e}`)}function Ne(e){console.log(`[DEBUG] [showTab] Called with: ${e}`),se.classList.remove("active"),re.classList.remove("active"),we.classList.add("hidden"),Ee.classList.add("hidden"),q.value="",e==="create-room"?(se.classList.add("active"),we.classList.remove("hidden"),console.log("[DEBUG] [showTab] Create Room Tab content shown.")):e==="join-room"?(re.classList.add("active"),Ee.classList.remove("hidden"),console.log("[DEBUG] [showTab] Join Room Tab content shown.")):console.warn(`[DEBUG] [showTab] Unknown tab requested: ${e}`)}let E=null,B=null,T=null,H=null,R=null,G=null,C=!1,v=null,F=[];async function Mt(){try{E=tt(),T=typeof crypto<"u"&&typeof crypto.randomUUID=="function"?crypto.randomUUID():vt(),B=Ve(),console.log("[DEBUG] App initialized. Local UUID (localId):",T,"Short ID (userId):",B),l("Supabase initialized and ready.","success");const e=E.channel("test_channel");e.subscribe(t=>{t==="SUBSCRIBED"?(console.log("[DEBUG] [Realtime Test] Successfully subscribed to test_channel. Realtime connection appears to be working."),e.unsubscribe()):t==="CHANNEL_ERROR"?console.error("[DEBUG] [Realtime Test] Error subscribing to test_channel. Realtime connection might be problematic."):console.log(`[DEBUG] [Realtime Test] Test channel status: ${t}`)}),S("player-name")}catch(e){console.error("[ERROR] Error initializing app:",e),l(`Error initializing app: ${e.message}`,"error")}}function Ke(e){console.log(`[DEBUG] [listenToRoom] Attempting to listen to room: ${e}`),G&&(E.removeChannel(G),G=null,console.log("[DEBUG] [listenToRoom] Existing room subscription removed.")),G=E.channel(`room:${e}`).on("postgres_changes",{event:"*",schema:"public",table:"Rooms",filter:`id=eq.${e}`},async t=>{if(console.log(`[DEBUG] [Realtime Event Received] Type: ${t.eventType}, New:`,t.new,"Old:",t.old),t.eventType==="UPDATE"||t.eventType==="INSERT"){const n=await ee(E,e);if(n){if(!(n.players||[]).some(i=>i["local-id"]===T)){console.log(`[DEBUG] [KICKED_DETECTION] Current user ${T} no longer in room ${R}. Forcing exit.`),l("You have been removed from the room!","error"),G&&(E.removeChannel(G),G=null),j(null,T,B,i=>M(E,R,B,C,i),F,J),R=null,C=!1,S("room-selection");return}v=n,C=T===v.host_id,console.log("[DEBUG] [listenToRoom] Realtime update (refetched) - FULL currentRoomData:",JSON.stringify(v,null,2)),j(v,T,B,i=>M(E,R,B,C,i),F,J)}else console.warn(`[WARN] [listenToRoom] Refetch of room ${e} returned null after update event.`),l("Room data could not be fetched. You may have been disconnected.","error"),G&&(E.removeChannel(G),G=null),j(null,T,B,o=>M(E,R,B,C,o),F,J),R=null,C=!1,S("room-selection")}else if(t.eventType==="DELETE"){console.log("[DEBUG] [listenToRoom] Room does not exist or was deleted."),l("Room does not exist or was deleted. You have been disconnected from this room.","error"),j(null,T,B,n=>M(E,R,B,C,n),F,J),R=null,C=!1,S("room-selection");return}}).subscribe(t=>{t==="SUBSCRIBED"?console.log(`[DEBUG] [listenToRoom] Subscribed to room ${e} changes.`):t==="CHANNEL_ERROR"&&(console.error(`[ERROR] [listenToRoom] Error subscribing to room ${e}.`),l(`Error subscribing to room ${e}.`,"error"))}),R=e,q.value=e,console.log(`[DEBUG] [listenToRoom] currentRoomId set to: ${R}`),ee(E,e).then(t=>{v=t,C=T===(v==null?void 0:v.host_id),console.log("[DEBUG] [listenToRoom] Initial fetch - FULL currentRoomData:",JSON.stringify(v,null,2)),j(v,T,B,n=>M(E,R,B,C,n),F,J)})}Le.addEventListener("click",()=>{const e=Ge.value.trim();e?(H=e,B=Ve(),Ge.disabled=!0,Le.disabled=!0,l(`Your name is set to: ${H} (ID: ${B})`,"info"),S("room-selection")):l("Please enter a valid name.","error")});se.addEventListener("click",()=>Ne("create-room"));re.addEventListener("click",()=>Ne("join-room"));ot.addEventListener("click",async()=>{const e=await Fe(E,H,B,T,nt.value);e&&(Ke(e),S("my-room"))});at.addEventListener("click",async()=>{await Et(E,H,B,T,q.value,v)&&(Ke(q.value),S("my-room"))});We.addEventListener("click",async()=>{await bt(E,R,B,T,C)});st.addEventListener("click",()=>{console.log("[DEBUG] Increment Counter button clicked."),kt(E,R,T,H,v)});rt.addEventListener("click",()=>{console.log("[DEBUG] Generate Random button clicked."),Bt(E,R,T,H,v)});N.addEventListener("click",()=>{Rt(v,C)&&(xt(),renameRoomModal.classList.add("active"))});ft.addEventListener("click",async()=>{await Ct(E,R,v,renameRoomInput.value)&&Te()});pt.addEventListener("click",Ut);renameRoomModal.addEventListener("click",e=>{e.target===renameRoomModal&&Te()});z.addEventListener("click",e=>{if(e.target.classList.contains("kick-player-btn")){const t=e.target.dataset.playerId;t&&M(E,R,B,C,t)}});be.addEventListener("click",e=>{const t=e.target,n=t.classList.contains("role-control-button")||t.classList.contains("disable-role-button"),o=t.closest(".role-controls");if(n&&o&&v){const a=t.dataset.roleName,i=t.dataset.action;if(console.log(`[DEBUG] Role control clicked: Role: ${a}, Action: ${i}`),a&&i){const s=ROLE_TEMPLATES.find(r=>r.name===a);if(s&&s.gem==="None"&&i==="toggleDisable"){l('Roles with gem "None" cannot be disabled/enabled.',"info");return}i==="increment"?Oe(E,R,v,a,1):i==="decrement"?Oe(E,R,v,a,-1):i==="toggleDisable"&&Tt(E,R,v,a)}}else v||(console.warn("[WARN] Role control clicked but currentRoomData is not available."),l("Room data not loaded yet. Please wait.","info"))});A.addEventListener("click",e=>{const t=e.target,n=t.dataset.gemName,o=t.dataset.action;console.log(`[DEBUG] Gem control clicked: Gem: ${n}, Action: ${o}, IsHost: ${C}`),v&&C&&n&&o?o==="incrementGem"?Ae(E,R,v,n,1):o==="decrementGem"?Ae(E,R,v,n,-1):o==="removeGem"&&_t(E,R,v,n):v&&!C&&(o==="incrementGem"||o==="decrementGem"||o==="removeGem"||o==="removeGem")?l("Only the host can edit gem settings.","error"):v||(console.warn("[WARN] Gem control clicked but currentRoomData is not available."),l("Room data not loaded yet. Please wait.","info"))});Y.addEventListener("click",()=>{console.log("[DEBUG] Add Gem button clicked. IsHost:",C),v&&C?It(v,e=>Nt(E,R,v,e)):v&&!C?l("Only the host can add new gem categories.","error"):(console.warn("[WARN] Add Gem button clicked but currentRoomData is not available."),l("Room data not loaded yet. Please wait.","info"))});cancelAddGemBtn.addEventListener("click",Be);le.addEventListener("click",e=>{e.target===le&&Be()});startGameBtn.addEventListener("click",()=>{console.log("[DEBUG] Start Game button clicked. IsHost:",C),Gt(E,R,C,v)});lt.addEventListener("click",()=>Lt(v,St));dt.addEventListener("click",ze);ct.addEventListener("click",Xe);rolesOverlay.addEventListener("click",e=>{e.target===rolesOverlay&&ze()});detailedRoleOverlay.addEventListener("click",e=>{e.target===detailedOverlay&&Xe()});K.addEventListener("click",qe);yt.addEventListener("click",qe);let ce=0,me=0,x=!1;b.addEventListener("mousedown",e=>{x=!0,ce=e.clientX,me=b.getBoundingClientRect().left,b.style.transition="none",document.body.style.userSelect="none"});document.addEventListener("mousemove",e=>{if(!x)return;const t=e.clientX-ce;let n=me+t;const o=-b.offsetWidth;n=Math.min(0,Math.max(o,n)),b.style.transform=`translateX(${n}px)`});document.addEventListener("mouseup",()=>{if(!x)return;x=!1,b.style.transition="transform 0.5s ease-in-out";const e=b.getBoundingClientRect().left,t=-b.offsetWidth/2;e>t?(b.classList.add("active"),b.style.transform="translateX(0)"):(b.classList.remove("active"),b.style.transform="translateX(-100%)"),document.body.style.userSelect=""});b.addEventListener("touchstart",e=>{x=!0,ce=e.touches[0].clientX,me=b.getBoundingClientRect().left,b.style.transition="none",document.body.style.userSelect="none"});document.addEventListener("touchmove",e=>{if(!x)return;const t=e.touches[0].clientX-ce,n=-b.offsetWidth;let o=me+t;o=Math.min(0,Math.max(n,o)),b.style.transform=`translateX(${o}px)`});document.addEventListener("touchend",()=>{if(!x)return;x=!1,b.style.transition="transform 0.5s ease-in-out";const e=b.getBoundingClientRect().left,t=-b.offsetWidth/2;e>t?(b.classList.add("active"),b.style.transform="translateX(0)"):(b.classList.remove("active"),b.style.transform="translateX(-100%)"),document.body.style.userSelect=""});Z.addEventListener("click",At);window.addEventListener("resize",de);window.addEventListener("beforeunload",async e=>{if(console.log("[DEBUG] [beforeunload] Page is about to unload. Attempting to leave room..."),R&&B&&E)try{E.rpc("remove_player_from_room",{p_room_id:R,p_player_id:B}),console.log("[DEBUG] [beforeunload] Sent leave room request.")}catch(t){console.error("[ERROR] [beforeunload] Error sending leave room request:",t)}});window.onload=Mt;console.log("Script fully loaded and executed.");
